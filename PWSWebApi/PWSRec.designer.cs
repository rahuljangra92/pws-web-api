#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace PWSWebApi
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "PWS_Rec")]
    public partial class PWSRecDataContext : System.Data.Linq.DataContext
    {
        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
#region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertNewEditTrans_tmp(NewEditTrans_tmp instance);
        partial void UpdateNewEditTrans_tmp(NewEditTrans_tmp instance);
        partial void DeleteNewEditTrans_tmp(NewEditTrans_tmp instance);
        partial void InsertProcess(Process instance);
        partial void UpdateProcess(Process instance);
        partial void DeleteProcess(Process instance);
        partial void InsertProcessHistory(ProcessHistory instance);
        partial void UpdateProcessHistory(ProcessHistory instance);
        partial void DeleteProcessHistory(ProcessHistory instance);
        partial void InsertLoad_EOD(Load_EOD instance);
        partial void UpdateLoad_EOD(Load_EOD instance);
        partial void DeleteLoad_EOD(Load_EOD instance);
        partial void InsertLoad_CorpAction(Load_CorpAction instance);
        partial void UpdateLoad_CorpAction(Load_CorpAction instance);
        partial void DeleteLoad_CorpAction(Load_CorpAction instance);
        partial void InsertIndex_Code(Index_Code instance);
        partial void UpdateIndex_Code(Index_Code instance);
        partial void DeleteIndex_Code(Index_Code instance);
        partial void InsertLoad_Index(Load_Index instance);
        partial void UpdateLoad_Index(Load_Index instance);
        partial void DeleteLoad_Index(Load_Index instance);
        partial void InsertNewEditTran(NewEditTran instance);
        partial void UpdateNewEditTran(NewEditTran instance);
        partial void DeleteNewEditTran(NewEditTran instance);
        partial void InsertErrorLog(ErrorLog instance);
        partial void UpdateErrorLog(ErrorLog instance);
        partial void DeleteErrorLog(ErrorLog instance);
        partial void InsertCashProProcess(CashProProcess instance);
        partial void UpdateCashProProcess(CashProProcess instance);
        partial void DeleteCashProProcess(CashProProcess instance);
        partial void InsertCashProProcessHistory(CashProProcessHistory instance);
        partial void UpdateCashProProcessHistory(CashProProcessHistory instance);
        partial void DeleteCashProProcessHistory(CashProProcessHistory instance);
        partial void InsertLoad_TermsAndCondition(Load_TermsAndCondition instance);
        partial void UpdateLoad_TermsAndCondition(Load_TermsAndCondition instance);
        partial void DeleteLoad_TermsAndCondition(Load_TermsAndCondition instance);
#endregion
        public PWSRecDataContext() : base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PWS_RecConnectionString"], mappingSource)
        {
            OnCreated();
        }

        public PWSRecDataContext(string connection) : base(connection, mappingSource)
        {
            OnCreated();
        }

        public PWSRecDataContext(System.Data.IDbConnection connection) : base(connection, mappingSource)
        {
            OnCreated();
        }

        public PWSRecDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : base(connection, mappingSource)
        {
            OnCreated();
        }

        public PWSRecDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<NewEditTrans_tmp> NewEditTrans_tmps
        {
            get
            {
                return this.GetTable<NewEditTrans_tmp>();
            }
        }

        public System.Data.Linq.Table<Process> Processes
        {
            get
            {
                return this.GetTable<Process>();
            }
        }

        public System.Data.Linq.Table<ProcessHistory> ProcessHistories
        {
            get
            {
                return this.GetTable<ProcessHistory>();
            }
        }

        public System.Data.Linq.Table<Intermediate_GetIdentifier> Intermediate_GetIdentifiers
        {
            get
            {
                return this.GetTable<Intermediate_GetIdentifier>();
            }
        }

        public System.Data.Linq.Table<Load_EOD> Load_EODs
        {
            get
            {
                return this.GetTable<Load_EOD>();
            }
        }

        public System.Data.Linq.Table<Load_CorpAction> Load_CorpActions
        {
            get
            {
                return this.GetTable<Load_CorpAction>();
            }
        }

        public System.Data.Linq.Table<Index_Code> Index_Codes
        {
            get
            {
                return this.GetTable<Index_Code>();
            }
        }

        public System.Data.Linq.Table<Load_Index> Load_Indexes
        {
            get
            {
                return this.GetTable<Load_Index>();
            }
        }

        public System.Data.Linq.Table<NewEditTran> NewEditTrans
        {
            get
            {
                return this.GetTable<NewEditTran>();
            }
        }

        public System.Data.Linq.Table<ErrorLog> ErrorLogs
        {
            get
            {
                return this.GetTable<ErrorLog>();
            }
        }

        public System.Data.Linq.Table<CashProProcess> CashProProcesses
        {
            get
            {
                return this.GetTable<CashProProcess>();
            }
        }

        public System.Data.Linq.Table<CashProProcessHistory> CashProProcessHistories
        {
            get
            {
                return this.GetTable<CashProProcessHistory>();
            }
        }

        public System.Data.Linq.Table<Load_TermsAndCondition> Load_TermsAndConditions
        {
            get
            {
                return this.GetTable<Load_TermsAndCondition>();
            }
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "tr.usp_SecuritySetup_GetIdentifiers")]
        public ISingleResult<Intermediate_GetIdentifier> usp_SecuritySetup_GetIdentifiers([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IdType", DbType = "VarChar(10)")] string idType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserID", DbType = "Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "LoadSourceID", DbType = "Int")] System.Nullable<int> loadSourceID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DPID", DbType = "Int")] System.Nullable<int> dPID)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idType, userID, loadSourceID, dPID);
            return ((ISingleResult<Intermediate_GetIdentifier>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "tr.usp_Price_GetIdentifiers")]
        public ISingleResult<Intermediate_GetIdentifier> usp_Price_GetIdentifiers()
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<Intermediate_GetIdentifier>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "tr.usp_CorpAction_GetIdentifiers")]
        public ISingleResult<Intermediate_GetIdentifier> usp_CorpAction_GetIdentifiers()
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<Intermediate_GetIdentifier>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "tr.usp_Index_Code_GetIdentifiers")]
        public ISingleResult<usp_Index_Code_GetIdentifiersResult> usp_Index_Code_GetIdentifiers()
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((ISingleResult<usp_Index_Code_GetIdentifiersResult>)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Account_INS")]
        public int usp_Load_Account_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_ID", DbType = "VarChar(255)")] string account_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PWS_Account_ID", DbType = "VarChar(255)")] string pWS_Account_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_Name", DbType = "VarChar(255)")] string account_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_Code", DbType = "VarChar(255)")] string account_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Base_Currency", DbType = "VarChar(255)")] string base_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_Number", DbType = "VarChar(255)")] string account_Number, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_Nick_Name_Primary", DbType = "VarChar(255)")] string account_Nick_Name_Primary, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_Group_Code", DbType = "VarChar(255)")] string user_Group_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Tax_Lot_Relief_Method", DbType = "VarChar(255)")] string tax_Lot_Relief_Method, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Benchmark", DbType = "VarChar(255)")] string benchmark, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Performance_Start_Date", DbType = "VarChar(255)")] string performance_Start_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Manager", DbType = "VarChar(255)")] string manager, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, account_ID, pWS_Account_ID, account_Name, account_Code, base_Currency, account_Number, account_Nick_Name_Primary, data_Source, load_Source, user_Group_Code, tax_Lot_Relief_Method, benchmark, performance_Start_Date, manager, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Entity_INS")]
        public int usp_Load_Entity_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Entity_ID", DbType = "VarChar(255)")] string entity_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Entity_Name", DbType = "VarChar(255)")] string entity_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Entity_Description", DbType = "VarChar(255)")] string entity_Description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Entity_Code", DbType = "VarChar(255)")] string entity_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_Group_Code", DbType = "VarChar(255)")] string user_Group_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, entity_ID, entity_Name, entity_Description, entity_Code, user_Group_Code, data_Source, load_Source, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Entity_Ownership_INS")]
        public int usp_Load_Entity_Ownership_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Ownership_ID", DbType = "VarChar(255)")] string ownership_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Entity_Code", DbType = "VarChar(255)")] string entity_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Pct_Ownership", DbType = "VarChar(255)")] string pct_Ownership, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_or_Entity", DbType = "VarChar(255)")] string account_or_Entity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_or_EntityCode", DbType = "VarChar(255)")] string account_or_EntityCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Starting_Date", DbType = "VarChar(255)")] string starting_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Ending_Date", DbType = "VarChar(255)")] string ending_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_Or_Entity_Order", DbType = "VarChar(255)")] string account_Or_Entity_Order, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, ownership_ID, entity_Code, pct_Ownership, account_or_Entity, account_or_EntityCode, starting_Date, ending_Date, account_Or_Entity_Order, data_Source, load_Source, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Portfolio_INS")]
        public int usp_Load_Portfolio_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Portfolio_ID", DbType = "VarChar(255)")] string portfolio_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Portfolio_Name", DbType = "VarChar(255)")] string portfolio_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Portfolio_Description", DbType = "VarChar(255)")] string portfolio_Description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Portfolio_Code", DbType = "VarChar(255)")] string portfolio_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_Group_Code", DbType = "VarChar(255)")] string user_Group_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, portfolio_ID, portfolio_Name, portfolio_Description, portfolio_Code, user_Group_Code, data_Source, load_Source, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Portfolio_Ownership_INS")]
        public int usp_Load_Portfolio_Ownership_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Portfolio_Owner_ID", DbType = "VarChar(255)")] string portfolio_Owner_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Portfolio_Name", DbType = "VarChar(255)")] string portfolio_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Portfolio_Code", DbType = "VarChar(255)")] string portfolio_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_or_Entity", DbType = "VarChar(255)")] string account_or_Entity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Acct_or_EntityCode", DbType = "VarChar(255)")] string acct_or_EntityCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_Or_Entity_Order", DbType = "VarChar(255)")] string account_Or_Entity_Order, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, portfolio_Owner_ID, portfolio_Name, portfolio_Code, account_or_Entity, acct_or_EntityCode, account_Or_Entity_Order, data_Source, load_Source, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Position_INS")]
        public int usp_Load_Position_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Position_ID", DbType = "VarChar(255)")] string position_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PWS_Account_ID", DbType = "VarChar(255)")] string pWS_Account_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_Code", DbType = "VarChar(255)")] string account_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Name", DbType = "VarChar(255)")] string security_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Code", DbType = "VarChar(255)")] string security_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Type", DbType = "VarChar(255)")] string security_Type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Date", DbType = "VarChar(255)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Quantity", DbType = "VarChar(255)")] string quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Price", DbType = "VarChar(255)")] string price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Local_Currency", DbType = "VarChar(255)")] string local_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Base_Currency", DbType = "VarChar(255)")] string base_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_to_Base_FX_Rate", DbType = "VarChar(255)")] string trade_to_Base_FX_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Local", DbType = "VarChar(255)")] string local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Base", DbType = "VarChar(255)")] string @base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Accrued_Interest_Local", DbType = "VarChar(255)")] string accrued_Interest_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Accrued_Interest_Base", DbType = "VarChar(255)")] string accrued_Interest_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Original_Cost_Local", DbType = "VarChar(255)")] string original_Cost_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Original_Cost_Base", DbType = "VarChar(255)")] string original_Cost_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, position_ID, pWS_Account_ID, account_Code, security_Name, security_Code, security_Type, date, quantity, price, local_Currency, base_Currency, trade_to_Base_FX_Rate, local, @base, accrued_Interest_Local, accrued_Interest_Base, original_Cost_Local, original_Cost_Base, data_Source, load_Source, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Positions_INS", IsComposable = true)]
        public object usp_Load_Positions_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Position_ID", DbType = "VarChar(255)")] string position_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AcctCode", DbType = "VarChar(255)")] string acctCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Name", DbType = "VarChar(255)")] string security_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecCode", DbType = "VarChar(255)")] string secCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecType", DbType = "VarChar(255)")] string secType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Date", DbType = "VarChar(255)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Shares_Quantity", DbType = "VarChar(255)")] string shares_Quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Price", DbType = "VarChar(255)")] string price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Local_Currency", DbType = "VarChar(255)")] string local_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Base_Currency", DbType = "VarChar(255)")] string base_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_Currency_to_Base_Currency_FX_Rate", DbType = "VarChar(255)")] string trade_Currency_to_Base_Currency_FX_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Local", DbType = "VarChar(255)")] string local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Base", DbType = "VarChar(255)")] string @base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Accrued_Interest_Local", DbType = "VarChar(255)")] string accrued_Interest_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Accrued_Interest_Base", DbType = "VarChar(255)")] string accrued_Interest_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Original_Cost_local", DbType = "VarChar(255)")] string original_Cost_local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Original_Cost_base", DbType = "VarChar(255)")] string original_Cost_base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source)
        {
            return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), position_ID, acctCode, security_Name, secCode, secType, date, shares_Quantity, price, local_Currency, base_Currency, trade_Currency_to_Base_Currency_FX_Rate, local, @base, accrued_Interest_Local, accrued_Interest_Base, original_Cost_local, original_Cost_base, data_Source, load_Source).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Price_INS")]
        public int usp_Load_Price_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Code", DbType = "VarChar(255)")] string security_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Date", DbType = "VarChar(255)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Price", DbType = "VarChar(255)")] string price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Final_or_Estimate", DbType = "VarChar(255)")] string final_or_Estimate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Principal_Currency", DbType = "VarChar(255)")] string principal_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, security_Code, date, price, final_or_Estimate, principal_Currency, data_Source, load_Source, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Securities_INS", IsComposable = true)]
        public object usp_Load_Securities_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Securities_ID", DbType = "VarChar(255)")] string securities_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecID", DbType = "VarChar(255)")] string secID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecName", DbType = "VarChar(255)")] string secName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecCode", DbType = "VarChar(255)")] string secCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecType", DbType = "VarChar(255)")] string secType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Unitized", DbType = "VarChar(255)")] string unitized, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PrincipalCurrency", DbType = "VarChar(255)")] string principalCurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IncomeCurrency", DbType = "VarChar(255)")] string incomeCurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PriceMultiplier", DbType = "VarChar(255)")] string priceMultiplier, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PublicallyViewable", DbType = "VarChar(255)")] string publicallyViewable, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserGroupCode", DbType = "VarChar(255)")] string userGroupCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DataSource", DbType = "VarChar(255)")] string dataSource, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "LoadSource", DbType = "VarChar(255)")] string loadSource, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecCode2", DbType = "VarChar(255)")] string secCode2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "InterestRate", DbType = "VarChar(255)")] string interestRate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DatedDate", DbType = "VarChar(255)")] string datedDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FirstPayDate", DbType = "VarChar(255)")] string firstPayDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "LastPayDate", DbType = "VarChar(255)")] string lastPayDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "MaturityDate", DbType = "VarChar(255)")] string maturityDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DayCountBasis", DbType = "VarChar(255)")] string dayCountBasis, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Frequency", DbType = "VarChar(255)")] string frequency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FloatingInterestRate", DbType = "VarChar(255)")] string floatingInterestRate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ResetDateStart", DbType = "VarChar(255)")] string resetDateStart)
        {
            return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), securities_ID, secID, secName, secCode, secType, unitized, principalCurrency, incomeCurrency, priceMultiplier, publicallyViewable, userGroupCode, dataSource, loadSource, secCode2, interestRate, datedDate, firstPayDate, lastPayDate, maturityDate, dayCountBasis, frequency, floatingInterestRate, resetDateStart).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Security_INS")]
        public int usp_Load_Security_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_ID", DbType = "VarChar(255)")] string security_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Name", DbType = "VarChar(255)")] string security_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Code", DbType = "VarChar(255)")] string security_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Type", DbType = "VarChar(255)")] string security_Type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Unitized", DbType = "VarChar(255)")] string unitized, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Principal_Currency", DbType = "VarChar(255)")] string principal_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Income_Currency", DbType = "VarChar(255)")] string income_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Publically_Viewable", DbType = "VarChar(255)")] string publically_Viewable, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Price_Multiplier", DbType = "VarChar(255)")] string price_Multiplier, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_Group_Code", DbType = "VarChar(255)")] string user_Group_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Interest_Rate", DbType = "VarChar(255)")] string interest_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Dated_Date", DbType = "VarChar(255)")] string dated_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "First_Pay_Date", DbType = "VarChar(255)")] string first_Pay_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Last_Pay_Date", DbType = "VarChar(255)")] string last_Pay_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Maturity_Date", DbType = "VarChar(255)")] string maturity_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Day_Count_Basis", DbType = "VarChar(255)")] string day_Count_Basis, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Frequency", DbType = "VarChar(255)")] string frequency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Floating_Interest_Rate", DbType = "VarChar(255)")] string floating_Interest_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Reset_Date_Start", DbType = "VarChar(255)")] string reset_Date_Start, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, security_ID, security_Name, security_Code, security_Type, unitized, principal_Currency, income_Currency, publically_Viewable, price_Multiplier, user_Group_Code, data_Source, load_Source, interest_Rate, dated_Date, first_Pay_Date, last_Pay_Date, maturity_Date, day_Count_Basis, frequency, floating_Interest_Rate, reset_Date_Start, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Transaction_INS")]
        public int usp_Load_Transaction_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Transaction_ID", DbType = "VarChar(255)")] string transaction_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PWS_Account_ID", DbType = "VarChar(255)")] string pWS_Account_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Account_Code", DbType = "VarChar(255)")] string account_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Name", DbType = "VarChar(255)")] string security_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Code", DbType = "VarChar(255)")] string security_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Type", DbType = "VarChar(255)")] string security_Type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Transaction_Type", DbType = "VarChar(255)")] string transaction_Type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Client_Description_of_Transaction_Type", DbType = "VarChar(255)")] string client_Description_of_Transaction_Type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_Date", DbType = "VarChar(255)")] string trade_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Acquisition_Trade_Date", DbType = "VarChar(255)")] string acquisition_Trade_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Settlement_Date", DbType = "VarChar(255)")] string settlement_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Acquisition_Settle_Date", DbType = "VarChar(255)")] string acquisition_Settle_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Quantity", DbType = "VarChar(255)")] string quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Price", DbType = "VarChar(255)")] string price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Relief_Method", DbType = "VarChar(255)")] string relief_Method, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_Currency", DbType = "VarChar(255)")] string trade_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Settlement_Currency", DbType = "VarChar(255)")] string settlement_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Base_Currency", DbType = "VarChar(255)")] string base_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_FX_Rate", DbType = "VarChar(255)")] string trade_FX_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Settlement_FX_Rate", DbType = "VarChar(255)")] string settlement_FX_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_to_Base_FX_Rate", DbType = "VarChar(255)")] string trade_to_Base_FX_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Gross_Local", DbType = "VarChar(255)")] string gross_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Gross_Base", DbType = "VarChar(255)")] string gross_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Net_Local", DbType = "VarChar(255)")] string net_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Net_Base", DbType = "VarChar(255)")] string net_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Accrued_Interest_Local", DbType = "VarChar(255)")] string accrued_Interest_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Accrued_Interest_Base", DbType = "VarChar(255)")] string accrued_Interest_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Original_Cost_Base", DbType = "VarChar(255)")] string original_Cost_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Original_Cost_Local", DbType = "VarChar(255)")] string original_Cost_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Adjusted_Cost_Base", DbType = "VarChar(255)")] string adjusted_Cost_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Adjusted_Cost_Local", DbType = "VarChar(255)")] string adjusted_Cost_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, transaction_ID, pWS_Account_ID, account_Code, security_Name, security_Code, security_Type, transaction_Type, client_Description_of_Transaction_Type, trade_Date, acquisition_Trade_Date, settlement_Date, acquisition_Settle_Date, quantity, price, relief_Method, trade_Currency, settlement_Currency, base_Currency, trade_FX_Rate, settlement_FX_Rate, trade_to_Base_FX_Rate, gross_Local, gross_Base, net_Local, net_Base, accrued_Interest_Local, accrued_Interest_Base, original_Cost_Base, original_Cost_Local, adjusted_Cost_Base, adjusted_Cost_Local, data_Source, load_Source, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_Transactions_INS", IsComposable = true)]
        public object usp_Load_Transactions_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Transaction_ID", DbType = "VarChar(255)")] string transaction_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AcctCode", DbType = "VarChar(255)")] string acctCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Security_Name", DbType = "VarChar(255)")] string security_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecCode", DbType = "VarChar(255)")] string secCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecType", DbType = "VarChar(255)")] string secType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Transaction_Type", DbType = "VarChar(255)")] string transaction_Type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Client_Description_of_Transaction_Type", DbType = "VarChar(255)")] string client_Description_of_Transaction_Type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_Date", DbType = "VarChar(255)")] string trade_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Acquisition_Trade_Date", DbType = "VarChar(255)")] string acquisition_Trade_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Settlement_Date", DbType = "VarChar(255)")] string settlement_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Acquisition_Settle_Date", DbType = "VarChar(255)")] string acquisition_Settle_Date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Shares_Quantity", DbType = "VarChar(255)")] string shares_Quantity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Price", DbType = "VarChar(255)")] string price, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Relief_Method", DbType = "VarChar(255)")] string relief_Method, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_Currency", DbType = "VarChar(255)")] string trade_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Settlement_Currency", DbType = "VarChar(255)")] string settlement_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Base_Currency", DbType = "VarChar(255)")] string base_Currency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_FX_Rate", DbType = "VarChar(255)")] string trade_FX_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Settlement_FX_Rate", DbType = "VarChar(255)")] string settlement_FX_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Trade_Currency_to_Base_Currency_FX_Rate", DbType = "VarChar(255)")] string trade_Currency_to_Base_Currency_FX_Rate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Gross_Local", DbType = "VarChar(255)")] string gross_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Gross_Base", DbType = "VarChar(255)")] string gross_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Net_Local", DbType = "VarChar(255)")] string net_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Net_Base", DbType = "VarChar(255)")] string net_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Accrued_Interest_Local", DbType = "VarChar(255)")] string accrued_Interest_Local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Accrued_Interest_Base", DbType = "VarChar(255)")] string accrued_Interest_Base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Original_Cost_base", DbType = "VarChar(255)")] string original_Cost_base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Original_Cost_local", DbType = "VarChar(255)")] string original_Cost_local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Adjusted_Cost_base", DbType = "VarChar(255)")] string adjusted_Cost_base, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Adjusted_Cost_local", DbType = "VarChar(255)")] string adjusted_Cost_local, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Data_Source", DbType = "VarChar(255)")] string data_Source, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Load_Source", DbType = "VarChar(255)")] string load_Source)
        {
            return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transaction_ID, acctCode, security_Name, secCode, secType, transaction_Type, client_Description_of_Transaction_Type, trade_Date, acquisition_Trade_Date, settlement_Date, acquisition_Settle_Date, shares_Quantity, price, relief_Method, trade_Currency, settlement_Currency, base_Currency, trade_FX_Rate, settlement_FX_Rate, trade_Currency_to_Base_Currency_FX_Rate, gross_Local, gross_Base, net_Local, net_Base, accrued_Interest_Local, accrued_Interest_Base, original_Cost_base, original_Cost_local, adjusted_Cost_base, adjusted_Cost_local, data_Source, load_Source).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "import.usp_Load_User_Group_INS")]
        public int usp_Load_User_Group_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExcelRowNumber", DbType = "Int")] System.Nullable<int> excelRowNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_Group_ID", DbType = "VarChar(255)")] string user_Group_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_Group_Name", DbType = "VarChar(255)")] string user_Group_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_Group_Code", DbType = "VarChar(255)")] string user_Group_Code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PWS_User_Group_ID", DbType = "VarChar(255)")] string pWS_User_Group_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "User_ID", DbType = "Int")] System.Nullable<int> user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FIle_Name", DbType = "VarChar(255)")] string fIle_Name)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), excelRowNumber, user_Group_ID, user_Group_Name, user_Group_Code, pWS_User_Group_ID, user_ID, fIle_Name);
            return ((int)(result.ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "tr.usp_Load_TermsAndConditions_INS")]
        public int usp_Load_TermsAndConditions_INS([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Identifier", DbType = "VarChar(255)")] string identifier, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IdentifierType", DbType = "VarChar(255)")] string identifierType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "LoadSourceID", DbType = "VarChar(255)")] string loadSourceID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DPID", DbType = "VarChar(255)")] string dPID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserID", DbType = "VarChar(255)")] string userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CUSIP", DbType = "VarChar(255)")] string cUSIP, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ISIN", DbType = "VarChar(255)")] string iSIN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Ticker", DbType = "VarChar(255)")] string ticker, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "RIC", DbType = "VarChar(255)")] string rIC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SEDOL", DbType = "VarChar(255)")] string sEDOL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Valoren", DbType = "VarChar(255)")] string valoren, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PrincCCYID", DbType = "VarChar(255)")] string princCCYID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AssetType", DbType = "VarChar(1000)")] string assetType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AssetTypeDescription", DbType = "VarChar(1000)")] string assetTypeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AssetSubType", DbType = "VarChar(1000)")] string assetSubType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AssetSubTypeDescription", DbType = "VarChar(1000)")] string assetSubTypeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DayCountCode", DbType = "VarChar(1000)")] string dayCountCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DayCountCodeDescription", DbType = "VarChar(1000)")] string dayCountCodeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IssueDate", DbType = "VarChar(1000)")] string issueDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IssuePrice", DbType = "VarChar(1000)")] string issuePrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AccrualDate", DbType = "VarChar(1000)")] string accrualDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "MaturityDate", DbType = "VarChar(1000)")] string maturityDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "LastCouponDate", DbType = "VarChar(1000)")] string lastCouponDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FirstCouponDate", DbType = "VarChar(1000)")] string firstCouponDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponRate", DbType = "VarChar(1000)")] string couponRate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponType", DbType = "VarChar(1000)")] string couponType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponTypeDescription", DbType = "VarChar(1000)")] string couponTypeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponFrequency", DbType = "VarChar(1000)")] string couponFrequency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponFrequencyDescription", DbType = "VarChar(1000)")] string couponFrequencyDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponCurrency", DbType = "VarChar(1000)")] string couponCurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "OriginalIssueDiscountFlag", DbType = "VarChar(1000)")] string originalIssueDiscountFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DenominationIncrement", DbType = "VarChar(1000)")] string denominationIncrement, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "NextCallDate", DbType = "VarChar(1000)")] string nextCallDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "NextCallPrice", DbType = "VarChar(1000)")] string nextCallPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ISOCountryCode", DbType = "VarChar(1000)")] string iSOCountryCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "StateCode", DbType = "VarChar(1000)")] string stateCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "MoodysRating", DbType = "VarChar(1000)")] string moodysRating, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IndustryDescription", DbType = "VarChar(1000)")] string industryDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IndustrySectorDescription", DbType = "VarChar(1000)")] string industrySectorDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TRBCEconomicSectorCode", DbType = "VarChar(1000)")] string tRBCEconomicSectorCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TRBCEconomicSectorCodeDescription", DbType = "VarChar(1000)")] string tRBCEconomicSectorCodeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TRBCIndustryCode", DbType = "VarChar(1000)")] string tRBCIndustryCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "TRBCIndustryCodeDescription", DbType = "VarChar(1000)")] string tRBCIndustryCodeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "HybridFlag", DbType = "VarChar(1000)")] string hybridFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ParValue", DbType = "VarChar(1000)")] string parValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SecurityDescription", DbType = "VarChar(1000)")] string securityDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CurrencyCode", DbType = "VarChar(1000)")] string currencyCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CurrencyCodeDescription", DbType = "VarChar(1000)")] string currencyCodeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DividendCurrency", DbType = "VarChar(1000)")] string dividendCurrency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "DividendCurrencyDescription", DbType = "VarChar(1000)")] string dividendCurrencyDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "InvestmentType", DbType = "VarChar(1000)")] string investmentType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExchangeCode", DbType = "VarChar(1000)")] string exchangeCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ExchangeDescription", DbType = "VarChar(1000)")] string exchangeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Domicile", DbType = "VarChar(1000)")] string domicile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IssuerName", DbType = "VarChar(1000)")] string issuerName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "IssuerOrgID", DbType = "VarChar(1000)")] string issuerOrgID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ETFType", DbType = "VarChar(1000)")] string eTFType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "ConvertibleFlag", DbType = "VarChar(1000)")] string convertibleFlag, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FloatIndexType", DbType = "VarChar(1000)")] string floatIndexType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponResetFrequency", DbType = "VarChar(1000)")] string couponResetFrequency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponResetFrequencyDescription", DbType = "VarChar(1000)")] string couponResetFrequencyDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponResetRuleCode", DbType = "VarChar(1000)")] string couponResetRuleCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CouponResetRuleCodeDescription", DbType = "VarChar(1000)")] string couponResetRuleCodeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "PreviousCouponDate", DbType = "VarChar(1000)")] string previousCouponDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SharesAmountType", DbType = "VarChar(1000)")] string sharesAmountType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "SharesAmount", DbType = "VarChar(1000)")] string sharesAmount, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "RefinitivClassificationScheme", DbType = "VarChar(1000)")] string refinitivClassificationScheme, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "RefinitivClassificationSchemeDescription", DbType = "VarChar(1000)")] string refinitivClassificationSchemeDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "GeographicalFocus", DbType = "VarChar(1000)")] string geographicalFocus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "LipperGlobalClassification", DbType = "VarChar(1000)")] string lipperGlobalClassification, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "FundManagerBenchmark", DbType = "VarChar(1000)")] string fundManagerBenchmark, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "UserDefinedIdentifier", DbType = "VarChar(1000)")] string userDefinedIdentifier)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), identifier, identifierType, loadSourceID, dPID, userID, cUSIP, iSIN, ticker, rIC, sEDOL, valoren, princCCYID, assetType, assetTypeDescription, assetSubType, assetSubTypeDescription, dayCountCode, dayCountCodeDescription, issueDate, issuePrice, accrualDate, maturityDate, lastCouponDate, firstCouponDate, couponRate, couponType, couponTypeDescription, couponFrequency, couponFrequencyDescription, couponCurrency, originalIssueDiscountFlag, denominationIncrement, nextCallDate, nextCallPrice, iSOCountryCode, stateCode, moodysRating, industryDescription, industrySectorDescription, tRBCEconomicSectorCode, tRBCEconomicSectorCodeDescription, tRBCIndustryCode, tRBCIndustryCodeDescription, hybridFlag, parValue, securityDescription, currencyCode, currencyCodeDescription, dividendCurrency, dividendCurrencyDescription, investmentType, exchangeCode, exchangeDescription, domicile, issuerName, issuerOrgID, eTFType, convertibleFlag, floatIndexType, couponResetFrequency, couponResetFrequencyDescription, couponResetRuleCode, couponResetRuleCodeDescription, previousCouponDate, sharesAmountType, sharesAmount, refinitivClassificationScheme, refinitivClassificationSchemeDescription, geographicalFocus, lipperGlobalClassification, fundManagerBenchmark, userDefinedIdentifier);
            return ((int)(result.ReturnValue));
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NewEditTrans_tmp")]
    public partial class NewEditTrans_tmp : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _NewEditTrans_tmpID;
        private int _UIID;
        private System.Nullable<int> _TransID;
        private System.Nullable<int> _TransProcessCodeID;
        private System.Nullable<decimal> _ProcessOrd;
        private System.Nullable<bool> _StaticData;
        private string _DPTransID;
        private string _DPLotID;
        private System.Nullable<int> _AcctID;
        private System.Nullable<int> _SubAcctID;
        private System.Nullable<int> _ReliefMethod;
        private System.Nullable<int> _SecID;
        private System.Nullable<int> _TCodeID;
        private string _DPTransCodeName;
        private System.Nullable<System.DateTime> _EffectiveDate;
        private System.Nullable<System.DateTime> _TradeDate;
        private System.Nullable<System.DateTime> _SettleDate;
        private System.Nullable<System.DateTime> _AcquisitionTradeDate;
        private System.Nullable<System.DateTime> _AcquisitionSettleDate;
        private System.Nullable<decimal> _Shrs;
        private System.Nullable<decimal> _OFShrs;
        private System.Nullable<decimal> _Price;
        private System.Nullable<decimal> _PriceMult;
        private System.Nullable<int> _TradeCCYID;
        private System.Nullable<int> _SettleCCYID;
        private System.Nullable<int> _BaseCCYID;
        private System.Nullable<decimal> _TradeFXRate;
        private System.Nullable<decimal> _SettleFXRate;
        private System.Nullable<decimal> _BaseFXRate;
        private System.Nullable<decimal> _GrossLocal;
        private System.Nullable<decimal> _GrossBase;
        private System.Nullable<decimal> _Fees;
        private System.Nullable<decimal> _ForeignWithhold;
        private System.Nullable<decimal> _NetLocal;
        private System.Nullable<decimal> _NetBase;
        private System.Nullable<decimal> _AILocal;
        private System.Nullable<decimal> _AIBase;
        private System.Nullable<decimal> _AALocal;
        private System.Nullable<decimal> _AABase;
        private System.Nullable<decimal> _OrigCostLocal;
        private System.Nullable<decimal> _OrigCostBase;
        private System.Nullable<decimal> _BookCostLocal;
        private System.Nullable<decimal> _BookCostBase;
        private System.Nullable<decimal> _RecordCostLocal;
        private System.Nullable<decimal> _RecordCostBase;
        private System.Nullable<decimal> _PurYld;
        private string _Comment;
        private System.Nullable<System.DateTime> _CreatedDate;
        private System.Nullable<bool> _Final;
        private System.Nullable<int> _DPID;
        private System.Nullable<int> _UserID;
        private System.Nullable<System.DateTime> _LoadDateTime;
        private string _Stat;
        private System.Nullable<System.DateTime> _RetiredDateTime;
        private System.Nullable<int> _LoadSourceID;
        private System.Nullable<int> _OriginalTransID;
        private System.Nullable<int> _TransTypeID;
        private System.Nullable<int> _TransSubTypeID;
        private System.Nullable<int> _LinkAcctID;
        private System.Nullable<int> _LinkSubAcctID;
        private string _UserDefined1;
        private string _UserDefined2;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNewEditTrans_tmpIDChanging(int value);
        partial void OnNewEditTrans_tmpIDChanged();
        partial void OnUIIDChanging(int value);
        partial void OnUIIDChanged();
        partial void OnTransIDChanging(System.Nullable<int> value);
        partial void OnTransIDChanged();
        partial void OnTransProcessCodeIDChanging(System.Nullable<int> value);
        partial void OnTransProcessCodeIDChanged();
        partial void OnProcessOrdChanging(System.Nullable<decimal> value);
        partial void OnProcessOrdChanged();
        partial void OnStaticDataChanging(System.Nullable<bool> value);
        partial void OnStaticDataChanged();
        partial void OnDPTransIDChanging(string value);
        partial void OnDPTransIDChanged();
        partial void OnDPLotIDChanging(string value);
        partial void OnDPLotIDChanged();
        partial void OnAcctIDChanging(System.Nullable<int> value);
        partial void OnAcctIDChanged();
        partial void OnSubAcctIDChanging(System.Nullable<int> value);
        partial void OnSubAcctIDChanged();
        partial void OnReliefMethodChanging(System.Nullable<int> value);
        partial void OnReliefMethodChanged();
        partial void OnSecIDChanging(System.Nullable<int> value);
        partial void OnSecIDChanged();
        partial void OnTCodeIDChanging(System.Nullable<int> value);
        partial void OnTCodeIDChanged();
        partial void OnDPTransCodeNameChanging(string value);
        partial void OnDPTransCodeNameChanged();
        partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
        partial void OnEffectiveDateChanged();
        partial void OnTradeDateChanging(System.Nullable<System.DateTime> value);
        partial void OnTradeDateChanged();
        partial void OnSettleDateChanging(System.Nullable<System.DateTime> value);
        partial void OnSettleDateChanged();
        partial void OnAcquisitionTradeDateChanging(System.Nullable<System.DateTime> value);
        partial void OnAcquisitionTradeDateChanged();
        partial void OnAcquisitionSettleDateChanging(System.Nullable<System.DateTime> value);
        partial void OnAcquisitionSettleDateChanged();
        partial void OnShrsChanging(System.Nullable<decimal> value);
        partial void OnShrsChanged();
        partial void OnOFShrsChanging(System.Nullable<decimal> value);
        partial void OnOFShrsChanged();
        partial void OnPriceChanging(System.Nullable<decimal> value);
        partial void OnPriceChanged();
        partial void OnPriceMultChanging(System.Nullable<decimal> value);
        partial void OnPriceMultChanged();
        partial void OnTradeCCYIDChanging(System.Nullable<int> value);
        partial void OnTradeCCYIDChanged();
        partial void OnSettleCCYIDChanging(System.Nullable<int> value);
        partial void OnSettleCCYIDChanged();
        partial void OnBaseCCYIDChanging(System.Nullable<int> value);
        partial void OnBaseCCYIDChanged();
        partial void OnTradeFXRateChanging(System.Nullable<decimal> value);
        partial void OnTradeFXRateChanged();
        partial void OnSettleFXRateChanging(System.Nullable<decimal> value);
        partial void OnSettleFXRateChanged();
        partial void OnBaseFXRateChanging(System.Nullable<decimal> value);
        partial void OnBaseFXRateChanged();
        partial void OnGrossLocalChanging(System.Nullable<decimal> value);
        partial void OnGrossLocalChanged();
        partial void OnGrossBaseChanging(System.Nullable<decimal> value);
        partial void OnGrossBaseChanged();
        partial void OnFeesChanging(System.Nullable<decimal> value);
        partial void OnFeesChanged();
        partial void OnForeignWithholdChanging(System.Nullable<decimal> value);
        partial void OnForeignWithholdChanged();
        partial void OnNetLocalChanging(System.Nullable<decimal> value);
        partial void OnNetLocalChanged();
        partial void OnNetBaseChanging(System.Nullable<decimal> value);
        partial void OnNetBaseChanged();
        partial void OnAILocalChanging(System.Nullable<decimal> value);
        partial void OnAILocalChanged();
        partial void OnAIBaseChanging(System.Nullable<decimal> value);
        partial void OnAIBaseChanged();
        partial void OnAALocalChanging(System.Nullable<decimal> value);
        partial void OnAALocalChanged();
        partial void OnAABaseChanging(System.Nullable<decimal> value);
        partial void OnAABaseChanged();
        partial void OnOrigCostLocalChanging(System.Nullable<decimal> value);
        partial void OnOrigCostLocalChanged();
        partial void OnOrigCostBaseChanging(System.Nullable<decimal> value);
        partial void OnOrigCostBaseChanged();
        partial void OnBookCostLocalChanging(System.Nullable<decimal> value);
        partial void OnBookCostLocalChanged();
        partial void OnBookCostBaseChanging(System.Nullable<decimal> value);
        partial void OnBookCostBaseChanged();
        partial void OnRecordCostLocalChanging(System.Nullable<decimal> value);
        partial void OnRecordCostLocalChanged();
        partial void OnRecordCostBaseChanging(System.Nullable<decimal> value);
        partial void OnRecordCostBaseChanged();
        partial void OnPurYldChanging(System.Nullable<decimal> value);
        partial void OnPurYldChanged();
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnFinalChanging(System.Nullable<bool> value);
        partial void OnFinalChanged();
        partial void OnDPIDChanging(System.Nullable<int> value);
        partial void OnDPIDChanged();
        partial void OnUserIDChanging(System.Nullable<int> value);
        partial void OnUserIDChanged();
        partial void OnLoadDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnLoadDateTimeChanged();
        partial void OnStatChanging(string value);
        partial void OnStatChanged();
        partial void OnRetiredDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnRetiredDateTimeChanged();
        partial void OnLoadSourceIDChanging(System.Nullable<int> value);
        partial void OnLoadSourceIDChanged();
        partial void OnOriginalTransIDChanging(System.Nullable<int> value);
        partial void OnOriginalTransIDChanged();
        partial void OnTransTypeIDChanging(System.Nullable<int> value);
        partial void OnTransTypeIDChanged();
        partial void OnTransSubTypeIDChanging(System.Nullable<int> value);
        partial void OnTransSubTypeIDChanged();
        partial void OnLinkAcctIDChanging(System.Nullable<int> value);
        partial void OnLinkAcctIDChanged();
        partial void OnLinkSubAcctIDChanging(System.Nullable<int> value);
        partial void OnLinkSubAcctIDChanged();
        partial void OnUserDefined1Changing(string value);
        partial void OnUserDefined1Changed();
        partial void OnUserDefined2Changing(string value);
        partial void OnUserDefined2Changed();
#endregion
        public NewEditTrans_tmp()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NewEditTrans_tmpID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int NewEditTrans_tmpID
        {
            get
            {
                return this._NewEditTrans_tmpID;
            }

            set
            {
                if ((this._NewEditTrans_tmpID != value))
                {
                    this.OnNewEditTrans_tmpIDChanging(value);
                    this.SendPropertyChanging();
                    this._NewEditTrans_tmpID = value;
                    this.SendPropertyChanged("NewEditTrans_tmpID");
                    this.OnNewEditTrans_tmpIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UIID", DbType = "Int NOT NULL")]
        public int UIID
        {
            get
            {
                return this._UIID;
            }

            set
            {
                if ((this._UIID != value))
                {
                    this.OnUIIDChanging(value);
                    this.SendPropertyChanging();
                    this._UIID = value;
                    this.SendPropertyChanged("UIID");
                    this.OnUIIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransID", DbType = "Int")]
        public System.Nullable<int> TransID
        {
            get
            {
                return this._TransID;
            }

            set
            {
                if ((this._TransID != value))
                {
                    this.OnTransIDChanging(value);
                    this.SendPropertyChanging();
                    this._TransID = value;
                    this.SendPropertyChanged("TransID");
                    this.OnTransIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransProcessCodeID", DbType = "Int")]
        public System.Nullable<int> TransProcessCodeID
        {
            get
            {
                return this._TransProcessCodeID;
            }

            set
            {
                if ((this._TransProcessCodeID != value))
                {
                    this.OnTransProcessCodeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TransProcessCodeID = value;
                    this.SendPropertyChanged("TransProcessCodeID");
                    this.OnTransProcessCodeIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProcessOrd", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> ProcessOrd
        {
            get
            {
                return this._ProcessOrd;
            }

            set
            {
                if ((this._ProcessOrd != value))
                {
                    this.OnProcessOrdChanging(value);
                    this.SendPropertyChanging();
                    this._ProcessOrd = value;
                    this.SendPropertyChanged("ProcessOrd");
                    this.OnProcessOrdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaticData", DbType = "Bit")]
        public System.Nullable<bool> StaticData
        {
            get
            {
                return this._StaticData;
            }

            set
            {
                if ((this._StaticData != value))
                {
                    this.OnStaticDataChanging(value);
                    this.SendPropertyChanging();
                    this._StaticData = value;
                    this.SendPropertyChanged("StaticData");
                    this.OnStaticDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPTransID", DbType = "VarChar(255)")]
        public string DPTransID
        {
            get
            {
                return this._DPTransID;
            }

            set
            {
                if ((this._DPTransID != value))
                {
                    this.OnDPTransIDChanging(value);
                    this.SendPropertyChanging();
                    this._DPTransID = value;
                    this.SendPropertyChanged("DPTransID");
                    this.OnDPTransIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPLotID", DbType = "VarChar(255)")]
        public string DPLotID
        {
            get
            {
                return this._DPLotID;
            }

            set
            {
                if ((this._DPLotID != value))
                {
                    this.OnDPLotIDChanging(value);
                    this.SendPropertyChanging();
                    this._DPLotID = value;
                    this.SendPropertyChanged("DPLotID");
                    this.OnDPLotIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AcctID", DbType = "Int")]
        public System.Nullable<int> AcctID
        {
            get
            {
                return this._AcctID;
            }

            set
            {
                if ((this._AcctID != value))
                {
                    this.OnAcctIDChanging(value);
                    this.SendPropertyChanging();
                    this._AcctID = value;
                    this.SendPropertyChanged("AcctID");
                    this.OnAcctIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubAcctID", DbType = "Int")]
        public System.Nullable<int> SubAcctID
        {
            get
            {
                return this._SubAcctID;
            }

            set
            {
                if ((this._SubAcctID != value))
                {
                    this.OnSubAcctIDChanging(value);
                    this.SendPropertyChanging();
                    this._SubAcctID = value;
                    this.SendPropertyChanged("SubAcctID");
                    this.OnSubAcctIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReliefMethod", DbType = "Int")]
        public System.Nullable<int> ReliefMethod
        {
            get
            {
                return this._ReliefMethod;
            }

            set
            {
                if ((this._ReliefMethod != value))
                {
                    this.OnReliefMethodChanging(value);
                    this.SendPropertyChanging();
                    this._ReliefMethod = value;
                    this.SendPropertyChanged("ReliefMethod");
                    this.OnReliefMethodChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecID", DbType = "Int")]
        public System.Nullable<int> SecID
        {
            get
            {
                return this._SecID;
            }

            set
            {
                if ((this._SecID != value))
                {
                    this.OnSecIDChanging(value);
                    this.SendPropertyChanging();
                    this._SecID = value;
                    this.SendPropertyChanged("SecID");
                    this.OnSecIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TCodeID", DbType = "Int")]
        public System.Nullable<int> TCodeID
        {
            get
            {
                return this._TCodeID;
            }

            set
            {
                if ((this._TCodeID != value))
                {
                    this.OnTCodeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TCodeID = value;
                    this.SendPropertyChanged("TCodeID");
                    this.OnTCodeIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPTransCodeName", DbType = "VarChar(255)")]
        public string DPTransCodeName
        {
            get
            {
                return this._DPTransCodeName;
            }

            set
            {
                if ((this._DPTransCodeName != value))
                {
                    this.OnDPTransCodeNameChanging(value);
                    this.SendPropertyChanging();
                    this._DPTransCodeName = value;
                    this.SendPropertyChanged("DPTransCodeName");
                    this.OnDPTransCodeNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EffectiveDate", DbType = "Date")]
        public System.Nullable<System.DateTime> EffectiveDate
        {
            get
            {
                return this._EffectiveDate;
            }

            set
            {
                if ((this._EffectiveDate != value))
                {
                    this.OnEffectiveDateChanging(value);
                    this.SendPropertyChanging();
                    this._EffectiveDate = value;
                    this.SendPropertyChanged("EffectiveDate");
                    this.OnEffectiveDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TradeDate", DbType = "Date")]
        public System.Nullable<System.DateTime> TradeDate
        {
            get
            {
                return this._TradeDate;
            }

            set
            {
                if ((this._TradeDate != value))
                {
                    this.OnTradeDateChanging(value);
                    this.SendPropertyChanging();
                    this._TradeDate = value;
                    this.SendPropertyChanged("TradeDate");
                    this.OnTradeDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettleDate", DbType = "Date")]
        public System.Nullable<System.DateTime> SettleDate
        {
            get
            {
                return this._SettleDate;
            }

            set
            {
                if ((this._SettleDate != value))
                {
                    this.OnSettleDateChanging(value);
                    this.SendPropertyChanging();
                    this._SettleDate = value;
                    this.SendPropertyChanged("SettleDate");
                    this.OnSettleDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AcquisitionTradeDate", DbType = "Date")]
        public System.Nullable<System.DateTime> AcquisitionTradeDate
        {
            get
            {
                return this._AcquisitionTradeDate;
            }

            set
            {
                if ((this._AcquisitionTradeDate != value))
                {
                    this.OnAcquisitionTradeDateChanging(value);
                    this.SendPropertyChanging();
                    this._AcquisitionTradeDate = value;
                    this.SendPropertyChanged("AcquisitionTradeDate");
                    this.OnAcquisitionTradeDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AcquisitionSettleDate", DbType = "Date")]
        public System.Nullable<System.DateTime> AcquisitionSettleDate
        {
            get
            {
                return this._AcquisitionSettleDate;
            }

            set
            {
                if ((this._AcquisitionSettleDate != value))
                {
                    this.OnAcquisitionSettleDateChanging(value);
                    this.SendPropertyChanging();
                    this._AcquisitionSettleDate = value;
                    this.SendPropertyChanged("AcquisitionSettleDate");
                    this.OnAcquisitionSettleDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Shrs", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> Shrs
        {
            get
            {
                return this._Shrs;
            }

            set
            {
                if ((this._Shrs != value))
                {
                    this.OnShrsChanging(value);
                    this.SendPropertyChanging();
                    this._Shrs = value;
                    this.SendPropertyChanged("Shrs");
                    this.OnShrsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OFShrs", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> OFShrs
        {
            get
            {
                return this._OFShrs;
            }

            set
            {
                if ((this._OFShrs != value))
                {
                    this.OnOFShrsChanging(value);
                    this.SendPropertyChanging();
                    this._OFShrs = value;
                    this.SendPropertyChanged("OFShrs");
                    this.OnOFShrsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price", DbType = "Decimal(32,16)")]
        public System.Nullable<decimal> Price
        {
            get
            {
                return this._Price;
            }

            set
            {
                if ((this._Price != value))
                {
                    this.OnPriceChanging(value);
                    this.SendPropertyChanging();
                    this._Price = value;
                    this.SendPropertyChanged("Price");
                    this.OnPriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PriceMult", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> PriceMult
        {
            get
            {
                return this._PriceMult;
            }

            set
            {
                if ((this._PriceMult != value))
                {
                    this.OnPriceMultChanging(value);
                    this.SendPropertyChanging();
                    this._PriceMult = value;
                    this.SendPropertyChanged("PriceMult");
                    this.OnPriceMultChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TradeCCYID", DbType = "Int")]
        public System.Nullable<int> TradeCCYID
        {
            get
            {
                return this._TradeCCYID;
            }

            set
            {
                if ((this._TradeCCYID != value))
                {
                    this.OnTradeCCYIDChanging(value);
                    this.SendPropertyChanging();
                    this._TradeCCYID = value;
                    this.SendPropertyChanged("TradeCCYID");
                    this.OnTradeCCYIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettleCCYID", DbType = "Int")]
        public System.Nullable<int> SettleCCYID
        {
            get
            {
                return this._SettleCCYID;
            }

            set
            {
                if ((this._SettleCCYID != value))
                {
                    this.OnSettleCCYIDChanging(value);
                    this.SendPropertyChanging();
                    this._SettleCCYID = value;
                    this.SendPropertyChanged("SettleCCYID");
                    this.OnSettleCCYIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BaseCCYID", DbType = "Int")]
        public System.Nullable<int> BaseCCYID
        {
            get
            {
                return this._BaseCCYID;
            }

            set
            {
                if ((this._BaseCCYID != value))
                {
                    this.OnBaseCCYIDChanging(value);
                    this.SendPropertyChanging();
                    this._BaseCCYID = value;
                    this.SendPropertyChanged("BaseCCYID");
                    this.OnBaseCCYIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TradeFXRate", DbType = "Decimal(32,16)")]
        public System.Nullable<decimal> TradeFXRate
        {
            get
            {
                return this._TradeFXRate;
            }

            set
            {
                if ((this._TradeFXRate != value))
                {
                    this.OnTradeFXRateChanging(value);
                    this.SendPropertyChanging();
                    this._TradeFXRate = value;
                    this.SendPropertyChanged("TradeFXRate");
                    this.OnTradeFXRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettleFXRate", DbType = "Decimal(32,16)")]
        public System.Nullable<decimal> SettleFXRate
        {
            get
            {
                return this._SettleFXRate;
            }

            set
            {
                if ((this._SettleFXRate != value))
                {
                    this.OnSettleFXRateChanging(value);
                    this.SendPropertyChanging();
                    this._SettleFXRate = value;
                    this.SendPropertyChanged("SettleFXRate");
                    this.OnSettleFXRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BaseFXRate", DbType = "Decimal(32,16)")]
        public System.Nullable<decimal> BaseFXRate
        {
            get
            {
                return this._BaseFXRate;
            }

            set
            {
                if ((this._BaseFXRate != value))
                {
                    this.OnBaseFXRateChanging(value);
                    this.SendPropertyChanging();
                    this._BaseFXRate = value;
                    this.SendPropertyChanged("BaseFXRate");
                    this.OnBaseFXRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GrossLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> GrossLocal
        {
            get
            {
                return this._GrossLocal;
            }

            set
            {
                if ((this._GrossLocal != value))
                {
                    this.OnGrossLocalChanging(value);
                    this.SendPropertyChanging();
                    this._GrossLocal = value;
                    this.SendPropertyChanged("GrossLocal");
                    this.OnGrossLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GrossBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> GrossBase
        {
            get
            {
                return this._GrossBase;
            }

            set
            {
                if ((this._GrossBase != value))
                {
                    this.OnGrossBaseChanging(value);
                    this.SendPropertyChanging();
                    this._GrossBase = value;
                    this.SendPropertyChanged("GrossBase");
                    this.OnGrossBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fees", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> Fees
        {
            get
            {
                return this._Fees;
            }

            set
            {
                if ((this._Fees != value))
                {
                    this.OnFeesChanging(value);
                    this.SendPropertyChanging();
                    this._Fees = value;
                    this.SendPropertyChanged("Fees");
                    this.OnFeesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ForeignWithhold", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> ForeignWithhold
        {
            get
            {
                return this._ForeignWithhold;
            }

            set
            {
                if ((this._ForeignWithhold != value))
                {
                    this.OnForeignWithholdChanging(value);
                    this.SendPropertyChanging();
                    this._ForeignWithhold = value;
                    this.SendPropertyChanged("ForeignWithhold");
                    this.OnForeignWithholdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NetLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> NetLocal
        {
            get
            {
                return this._NetLocal;
            }

            set
            {
                if ((this._NetLocal != value))
                {
                    this.OnNetLocalChanging(value);
                    this.SendPropertyChanging();
                    this._NetLocal = value;
                    this.SendPropertyChanged("NetLocal");
                    this.OnNetLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NetBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> NetBase
        {
            get
            {
                return this._NetBase;
            }

            set
            {
                if ((this._NetBase != value))
                {
                    this.OnNetBaseChanging(value);
                    this.SendPropertyChanging();
                    this._NetBase = value;
                    this.SendPropertyChanged("NetBase");
                    this.OnNetBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AILocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> AILocal
        {
            get
            {
                return this._AILocal;
            }

            set
            {
                if ((this._AILocal != value))
                {
                    this.OnAILocalChanging(value);
                    this.SendPropertyChanging();
                    this._AILocal = value;
                    this.SendPropertyChanged("AILocal");
                    this.OnAILocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AIBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> AIBase
        {
            get
            {
                return this._AIBase;
            }

            set
            {
                if ((this._AIBase != value))
                {
                    this.OnAIBaseChanging(value);
                    this.SendPropertyChanging();
                    this._AIBase = value;
                    this.SendPropertyChanged("AIBase");
                    this.OnAIBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AALocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> AALocal
        {
            get
            {
                return this._AALocal;
            }

            set
            {
                if ((this._AALocal != value))
                {
                    this.OnAALocalChanging(value);
                    this.SendPropertyChanging();
                    this._AALocal = value;
                    this.SendPropertyChanged("AALocal");
                    this.OnAALocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AABase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> AABase
        {
            get
            {
                return this._AABase;
            }

            set
            {
                if ((this._AABase != value))
                {
                    this.OnAABaseChanging(value);
                    this.SendPropertyChanging();
                    this._AABase = value;
                    this.SendPropertyChanged("AABase");
                    this.OnAABaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrigCostLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> OrigCostLocal
        {
            get
            {
                return this._OrigCostLocal;
            }

            set
            {
                if ((this._OrigCostLocal != value))
                {
                    this.OnOrigCostLocalChanging(value);
                    this.SendPropertyChanging();
                    this._OrigCostLocal = value;
                    this.SendPropertyChanged("OrigCostLocal");
                    this.OnOrigCostLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrigCostBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> OrigCostBase
        {
            get
            {
                return this._OrigCostBase;
            }

            set
            {
                if ((this._OrigCostBase != value))
                {
                    this.OnOrigCostBaseChanging(value);
                    this.SendPropertyChanging();
                    this._OrigCostBase = value;
                    this.SendPropertyChanged("OrigCostBase");
                    this.OnOrigCostBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BookCostLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> BookCostLocal
        {
            get
            {
                return this._BookCostLocal;
            }

            set
            {
                if ((this._BookCostLocal != value))
                {
                    this.OnBookCostLocalChanging(value);
                    this.SendPropertyChanging();
                    this._BookCostLocal = value;
                    this.SendPropertyChanged("BookCostLocal");
                    this.OnBookCostLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BookCostBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> BookCostBase
        {
            get
            {
                return this._BookCostBase;
            }

            set
            {
                if ((this._BookCostBase != value))
                {
                    this.OnBookCostBaseChanging(value);
                    this.SendPropertyChanging();
                    this._BookCostBase = value;
                    this.SendPropertyChanged("BookCostBase");
                    this.OnBookCostBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RecordCostLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> RecordCostLocal
        {
            get
            {
                return this._RecordCostLocal;
            }

            set
            {
                if ((this._RecordCostLocal != value))
                {
                    this.OnRecordCostLocalChanging(value);
                    this.SendPropertyChanging();
                    this._RecordCostLocal = value;
                    this.SendPropertyChanged("RecordCostLocal");
                    this.OnRecordCostLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RecordCostBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> RecordCostBase
        {
            get
            {
                return this._RecordCostBase;
            }

            set
            {
                if ((this._RecordCostBase != value))
                {
                    this.OnRecordCostBaseChanging(value);
                    this.SendPropertyChanging();
                    this._RecordCostBase = value;
                    this.SendPropertyChanged("RecordCostBase");
                    this.OnRecordCostBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PurYld", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> PurYld
        {
            get
            {
                return this._PurYld;
            }

            set
            {
                if ((this._PurYld != value))
                {
                    this.OnPurYldChanging(value);
                    this.SendPropertyChanging();
                    this._PurYld = value;
                    this.SendPropertyChanged("PurYld");
                    this.OnPurYldChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Comment", DbType = "VarChar(255)")]
        public string Comment
        {
            get
            {
                return this._Comment;
            }

            set
            {
                if ((this._Comment != value))
                {
                    this.OnCommentChanging(value);
                    this.SendPropertyChanging();
                    this._Comment = value;
                    this.SendPropertyChanged("Comment");
                    this.OnCommentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }

            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Final", DbType = "Bit")]
        public System.Nullable<bool> Final
        {
            get
            {
                return this._Final;
            }

            set
            {
                if ((this._Final != value))
                {
                    this.OnFinalChanging(value);
                    this.SendPropertyChanging();
                    this._Final = value;
                    this.SendPropertyChanged("Final");
                    this.OnFinalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPID", DbType = "Int")]
        public System.Nullable<int> DPID
        {
            get
            {
                return this._DPID;
            }

            set
            {
                if ((this._DPID != value))
                {
                    this.OnDPIDChanging(value);
                    this.SendPropertyChanging();
                    this._DPID = value;
                    this.SendPropertyChanged("DPID");
                    this.OnDPIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserID", DbType = "Int")]
        public System.Nullable<int> UserID
        {
            get
            {
                return this._UserID;
            }

            set
            {
                if ((this._UserID != value))
                {
                    this.OnUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoadDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LoadDateTime
        {
            get
            {
                return this._LoadDateTime;
            }

            set
            {
                if ((this._LoadDateTime != value))
                {
                    this.OnLoadDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._LoadDateTime = value;
                    this.SendPropertyChanged("LoadDateTime");
                    this.OnLoadDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Stat", DbType = "VarChar(1)")]
        public string Stat
        {
            get
            {
                return this._Stat;
            }

            set
            {
                if ((this._Stat != value))
                {
                    this.OnStatChanging(value);
                    this.SendPropertyChanging();
                    this._Stat = value;
                    this.SendPropertyChanged("Stat");
                    this.OnStatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RetiredDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> RetiredDateTime
        {
            get
            {
                return this._RetiredDateTime;
            }

            set
            {
                if ((this._RetiredDateTime != value))
                {
                    this.OnRetiredDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._RetiredDateTime = value;
                    this.SendPropertyChanged("RetiredDateTime");
                    this.OnRetiredDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoadSourceID", DbType = "Int")]
        public System.Nullable<int> LoadSourceID
        {
            get
            {
                return this._LoadSourceID;
            }

            set
            {
                if ((this._LoadSourceID != value))
                {
                    this.OnLoadSourceIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoadSourceID = value;
                    this.SendPropertyChanged("LoadSourceID");
                    this.OnLoadSourceIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OriginalTransID", DbType = "Int")]
        public System.Nullable<int> OriginalTransID
        {
            get
            {
                return this._OriginalTransID;
            }

            set
            {
                if ((this._OriginalTransID != value))
                {
                    this.OnOriginalTransIDChanging(value);
                    this.SendPropertyChanging();
                    this._OriginalTransID = value;
                    this.SendPropertyChanged("OriginalTransID");
                    this.OnOriginalTransIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransTypeID", DbType = "Int")]
        public System.Nullable<int> TransTypeID
        {
            get
            {
                return this._TransTypeID;
            }

            set
            {
                if ((this._TransTypeID != value))
                {
                    this.OnTransTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TransTypeID = value;
                    this.SendPropertyChanged("TransTypeID");
                    this.OnTransTypeIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransSubTypeID", DbType = "Int")]
        public System.Nullable<int> TransSubTypeID
        {
            get
            {
                return this._TransSubTypeID;
            }

            set
            {
                if ((this._TransSubTypeID != value))
                {
                    this.OnTransSubTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TransSubTypeID = value;
                    this.SendPropertyChanged("TransSubTypeID");
                    this.OnTransSubTypeIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LinkAcctID", DbType = "Int")]
        public System.Nullable<int> LinkAcctID
        {
            get
            {
                return this._LinkAcctID;
            }

            set
            {
                if ((this._LinkAcctID != value))
                {
                    this.OnLinkAcctIDChanging(value);
                    this.SendPropertyChanging();
                    this._LinkAcctID = value;
                    this.SendPropertyChanged("LinkAcctID");
                    this.OnLinkAcctIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LinkSubAcctID", DbType = "Int")]
        public System.Nullable<int> LinkSubAcctID
        {
            get
            {
                return this._LinkSubAcctID;
            }

            set
            {
                if ((this._LinkSubAcctID != value))
                {
                    this.OnLinkSubAcctIDChanging(value);
                    this.SendPropertyChanging();
                    this._LinkSubAcctID = value;
                    this.SendPropertyChanged("LinkSubAcctID");
                    this.OnLinkSubAcctIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserDefined1", DbType = "VarChar(255)")]
        public string UserDefined1
        {
            get
            {
                return this._UserDefined1;
            }

            set
            {
                if ((this._UserDefined1 != value))
                {
                    this.OnUserDefined1Changing(value);
                    this.SendPropertyChanging();
                    this._UserDefined1 = value;
                    this.SendPropertyChanged("UserDefined1");
                    this.OnUserDefined1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserDefined2", DbType = "VarChar(255)")]
        public string UserDefined2
        {
            get
            {
                return this._UserDefined2;
            }

            set
            {
                if ((this._UserDefined2 != value))
                {
                    this.OnUserDefined2Changing(value);
                    this.SendPropertyChanging();
                    this._UserDefined2 = value;
                    this.SendPropertyChanged("UserDefined2");
                    this.OnUserDefined2Changed();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "tr.Processes")]
    public partial class Process : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _Processes_ID;
        private string _ProcessName;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnProcesses_IDChanging(int value);
        partial void OnProcesses_IDChanged();
        partial void OnProcessNameChanging(string value);
        partial void OnProcessNameChanged();
#endregion
        public Process()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Processes_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Processes_ID
        {
            get
            {
                return this._Processes_ID;
            }

            set
            {
                if ((this._Processes_ID != value))
                {
                    this.OnProcesses_IDChanging(value);
                    this.SendPropertyChanging();
                    this._Processes_ID = value;
                    this.SendPropertyChanged("Processes_ID");
                    this.OnProcesses_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProcessName", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string ProcessName
        {
            get
            {
                return this._ProcessName;
            }

            set
            {
                if ((this._ProcessName != value))
                {
                    this.OnProcessNameChanging(value);
                    this.SendPropertyChanging();
                    this._ProcessName = value;
                    this.SendPropertyChanged("ProcessName");
                    this.OnProcessNameChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "tr.ProcessHistory")]
    public partial class ProcessHistory : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _ProcessHistory_ID;
        private System.DateTime _RunDateTime;
        private string _Error;
        private System.Nullable<int> _Process_ID;
        private System.Nullable<System.DateTime> _UpdateDateTime;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnProcessHistory_IDChanging(int value);
        partial void OnProcessHistory_IDChanged();
        partial void OnRunDateTimeChanging(System.DateTime value);
        partial void OnRunDateTimeChanged();
        partial void OnErrorChanging(string value);
        partial void OnErrorChanged();
        partial void OnProcess_IDChanging(System.Nullable<int> value);
        partial void OnProcess_IDChanged();
        partial void OnUpdateDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnUpdateDateTimeChanged();
#endregion
        public ProcessHistory()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProcessHistory_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ProcessHistory_ID
        {
            get
            {
                return this._ProcessHistory_ID;
            }

            set
            {
                if ((this._ProcessHistory_ID != value))
                {
                    this.OnProcessHistory_IDChanging(value);
                    this.SendPropertyChanging();
                    this._ProcessHistory_ID = value;
                    this.SendPropertyChanged("ProcessHistory_ID");
                    this.OnProcessHistory_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RunDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime RunDateTime
        {
            get
            {
                return this._RunDateTime;
            }

            set
            {
                if ((this._RunDateTime != value))
                {
                    this.OnRunDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._RunDateTime = value;
                    this.SendPropertyChanged("RunDateTime");
                    this.OnRunDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Error", DbType = "VarChar(MAX)")]
        public string Error
        {
            get
            {
                return this._Error;
            }

            set
            {
                if ((this._Error != value))
                {
                    this.OnErrorChanging(value);
                    this.SendPropertyChanging();
                    this._Error = value;
                    this.SendPropertyChanged("Error");
                    this.OnErrorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Process_ID", DbType = "Int")]
        public System.Nullable<int> Process_ID
        {
            get
            {
                return this._Process_ID;
            }

            set
            {
                if ((this._Process_ID != value))
                {
                    this.OnProcess_IDChanging(value);
                    this.SendPropertyChanging();
                    this._Process_ID = value;
                    this.SendPropertyChanged("Process_ID");
                    this.OnProcess_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdateDateTime
        {
            get
            {
                return this._UpdateDateTime;
            }

            set
            {
                if ((this._UpdateDateTime != value))
                {
                    this.OnUpdateDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDateTime = value;
                    this.SendPropertyChanged("UpdateDateTime");
                    this.OnUpdateDateTimeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "tr.Intermediate_GetIdentifier")]
    public partial class Intermediate_GetIdentifier
    {
        private string _Identifier;
        private string _IDType;
        private System.Nullable<int> _UserIdentifier;
        private string _Cusip;
        public Intermediate_GetIdentifier()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Identifier", DbType = "VarChar(50)")]
        public string Identifier
        {
            get
            {
                return this._Identifier;
            }

            set
            {
                if ((this._Identifier != value))
                {
                    this._Identifier = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDType", DbType = "VarChar(50)")]
        public string IDType
        {
            get
            {
                return this._IDType;
            }

            set
            {
                if ((this._IDType != value))
                {
                    this._IDType = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserIdentifier", DbType = "Int")]
        public System.Nullable<int> UserIdentifier
        {
            get
            {
                return this._UserIdentifier;
            }

            set
            {
                if ((this._UserIdentifier != value))
                {
                    this._UserIdentifier = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Cusip", DbType = "VarChar(255)")]
        public string Cusip
        {
            get
            {
                return this._Cusip;
            }

            set
            {
                if ((this._Cusip != value))
                {
                    this._Cusip = value;
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "tr.Load_EOD")]
    public partial class Load_EOD : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _Load_EOD_ID;
        private string _Identifier;
        private string _IdentifierType;
        private string _Ticker;
        private string _RIC;
        private string _CurrencyCode;
        private string _BidPrice;
        private string _AskPrice;
        private string _MidPrice;
        private string _ClosePrice;
        private string _UniversalClosePrice;
        private string _TradeDate;
        private string _MaturityDate;
        private string _PutCallIndicator;
        private string _UserDefinedIdentifier;
        private System.Data.Linq.Binary _RawCheckSum;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLoad_EOD_IDChanging(int value);
        partial void OnLoad_EOD_IDChanged();
        partial void OnIdentifierChanging(string value);
        partial void OnIdentifierChanged();
        partial void OnIdentifierTypeChanging(string value);
        partial void OnIdentifierTypeChanged();
        partial void OnTickerChanging(string value);
        partial void OnTickerChanged();
        partial void OnRICChanging(string value);
        partial void OnRICChanged();
        partial void OnCurrencyCodeChanging(string value);
        partial void OnCurrencyCodeChanged();
        partial void OnBidPriceChanging(string value);
        partial void OnBidPriceChanged();
        partial void OnAskPriceChanging(string value);
        partial void OnAskPriceChanged();
        partial void OnMidPriceChanging(string value);
        partial void OnMidPriceChanged();
        partial void OnClosePriceChanging(string value);
        partial void OnClosePriceChanged();
        partial void OnUniversalClosePriceChanging(string value);
        partial void OnUniversalClosePriceChanged();
        partial void OnTradeDateChanging(string value);
        partial void OnTradeDateChanged();
        partial void OnMaturityDateChanging(string value);
        partial void OnMaturityDateChanged();
        partial void OnPutCallIndicatorChanging(string value);
        partial void OnPutCallIndicatorChanged();
        partial void OnUserDefinedIdentifierChanging(string value);
        partial void OnUserDefinedIdentifierChanged();
        partial void OnRawCheckSumChanging(System.Data.Linq.Binary value);
        partial void OnRawCheckSumChanged();
#endregion
        public Load_EOD()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Load_EOD_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Load_EOD_ID
        {
            get
            {
                return this._Load_EOD_ID;
            }

            set
            {
                if ((this._Load_EOD_ID != value))
                {
                    this.OnLoad_EOD_IDChanging(value);
                    this.SendPropertyChanging();
                    this._Load_EOD_ID = value;
                    this.SendPropertyChanged("Load_EOD_ID");
                    this.OnLoad_EOD_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Identifier", DbType = "VarChar(255)")]
        public string Identifier
        {
            get
            {
                return this._Identifier;
            }

            set
            {
                if ((this._Identifier != value))
                {
                    this.OnIdentifierChanging(value);
                    this.SendPropertyChanging();
                    this._Identifier = value;
                    this.SendPropertyChanged("Identifier");
                    this.OnIdentifierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdentifierType", DbType = "VarChar(255)")]
        public string IdentifierType
        {
            get
            {
                return this._IdentifierType;
            }

            set
            {
                if ((this._IdentifierType != value))
                {
                    this.OnIdentifierTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdentifierType = value;
                    this.SendPropertyChanged("IdentifierType");
                    this.OnIdentifierTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ticker", DbType = "VarChar(255)")]
        public string Ticker
        {
            get
            {
                return this._Ticker;
            }

            set
            {
                if ((this._Ticker != value))
                {
                    this.OnTickerChanging(value);
                    this.SendPropertyChanging();
                    this._Ticker = value;
                    this.SendPropertyChanged("Ticker");
                    this.OnTickerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RIC", DbType = "VarChar(255)")]
        public string RIC
        {
            get
            {
                return this._RIC;
            }

            set
            {
                if ((this._RIC != value))
                {
                    this.OnRICChanging(value);
                    this.SendPropertyChanging();
                    this._RIC = value;
                    this.SendPropertyChanged("RIC");
                    this.OnRICChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurrencyCode", DbType = "VarChar(255)")]
        public string CurrencyCode
        {
            get
            {
                return this._CurrencyCode;
            }

            set
            {
                if ((this._CurrencyCode != value))
                {
                    this.OnCurrencyCodeChanging(value);
                    this.SendPropertyChanging();
                    this._CurrencyCode = value;
                    this.SendPropertyChanged("CurrencyCode");
                    this.OnCurrencyCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BidPrice", DbType = "VarChar(255)")]
        public string BidPrice
        {
            get
            {
                return this._BidPrice;
            }

            set
            {
                if ((this._BidPrice != value))
                {
                    this.OnBidPriceChanging(value);
                    this.SendPropertyChanging();
                    this._BidPrice = value;
                    this.SendPropertyChanged("BidPrice");
                    this.OnBidPriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AskPrice", DbType = "VarChar(255)")]
        public string AskPrice
        {
            get
            {
                return this._AskPrice;
            }

            set
            {
                if ((this._AskPrice != value))
                {
                    this.OnAskPriceChanging(value);
                    this.SendPropertyChanging();
                    this._AskPrice = value;
                    this.SendPropertyChanged("AskPrice");
                    this.OnAskPriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MidPrice", DbType = "VarChar(255)")]
        public string MidPrice
        {
            get
            {
                return this._MidPrice;
            }

            set
            {
                if ((this._MidPrice != value))
                {
                    this.OnMidPriceChanging(value);
                    this.SendPropertyChanging();
                    this._MidPrice = value;
                    this.SendPropertyChanged("MidPrice");
                    this.OnMidPriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ClosePrice", DbType = "VarChar(255)")]
        public string ClosePrice
        {
            get
            {
                return this._ClosePrice;
            }

            set
            {
                if ((this._ClosePrice != value))
                {
                    this.OnClosePriceChanging(value);
                    this.SendPropertyChanging();
                    this._ClosePrice = value;
                    this.SendPropertyChanged("ClosePrice");
                    this.OnClosePriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UniversalClosePrice", DbType = "VarChar(255)")]
        public string UniversalClosePrice
        {
            get
            {
                return this._UniversalClosePrice;
            }

            set
            {
                if ((this._UniversalClosePrice != value))
                {
                    this.OnUniversalClosePriceChanging(value);
                    this.SendPropertyChanging();
                    this._UniversalClosePrice = value;
                    this.SendPropertyChanged("UniversalClosePrice");
                    this.OnUniversalClosePriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TradeDate", DbType = "VarChar(255)")]
        public string TradeDate
        {
            get
            {
                return this._TradeDate;
            }

            set
            {
                if ((this._TradeDate != value))
                {
                    this.OnTradeDateChanging(value);
                    this.SendPropertyChanging();
                    this._TradeDate = value;
                    this.SendPropertyChanged("TradeDate");
                    this.OnTradeDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaturityDate", DbType = "VarChar(255)")]
        public string MaturityDate
        {
            get
            {
                return this._MaturityDate;
            }

            set
            {
                if ((this._MaturityDate != value))
                {
                    this.OnMaturityDateChanging(value);
                    this.SendPropertyChanging();
                    this._MaturityDate = value;
                    this.SendPropertyChanged("MaturityDate");
                    this.OnMaturityDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PutCallIndicator", DbType = "VarChar(255)")]
        public string PutCallIndicator
        {
            get
            {
                return this._PutCallIndicator;
            }

            set
            {
                if ((this._PutCallIndicator != value))
                {
                    this.OnPutCallIndicatorChanging(value);
                    this.SendPropertyChanging();
                    this._PutCallIndicator = value;
                    this.SendPropertyChanged("PutCallIndicator");
                    this.OnPutCallIndicatorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserDefinedIdentifier", DbType = "VarChar(255)")]
        public string UserDefinedIdentifier
        {
            get
            {
                return this._UserDefinedIdentifier;
            }

            set
            {
                if ((this._UserDefinedIdentifier != value))
                {
                    this.OnUserDefinedIdentifierChanging(value);
                    this.SendPropertyChanging();
                    this._UserDefinedIdentifier = value;
                    this.SendPropertyChanged("UserDefinedIdentifier");
                    this.OnUserDefinedIdentifierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RawCheckSum", DbType = "VarBinary(20)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary RawCheckSum
        {
            get
            {
                return this._RawCheckSum;
            }

            set
            {
                if ((this._RawCheckSum != value))
                {
                    this.OnRawCheckSumChanging(value);
                    this.SendPropertyChanging();
                    this._RawCheckSum = value;
                    this.SendPropertyChanged("RawCheckSum");
                    this.OnRawCheckSumChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "tr.Load_CorpActions")]
    public partial class Load_CorpAction : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _Load_CorpActions_ID;
        private string _Identifier;
        private string _IdentifierType;
        private string _CorporateActionsID;
        private string _CorporateActionsType;
        private string _CUSIP;
        private string _ISIN;
        private string _Ticker;
        private string _RIC;
        private string _CurrencyCode;
        private string _DividendCurrency;
        private string _DividendCurrencyDescription;
        private string _DividendRate;
        private string _DividendExDate;
        private string _DividendPayDate;
        private string _RecordDate;
        private string _DividendTypeMarker;
        private string _DividendTypeMarkerDescription;
        private string _DividendTaxMarker;
        private string _DividendTaxMarkerDescription;
        private string _DividendFrequency;
        private string _DividendFrequencyDescription;
        private string _UserDefinedIdentifier;
        private System.Data.Linq.Binary _RawCheckSum;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLoad_CorpActions_IDChanging(int value);
        partial void OnLoad_CorpActions_IDChanged();
        partial void OnIdentifierChanging(string value);
        partial void OnIdentifierChanged();
        partial void OnIdentifierTypeChanging(string value);
        partial void OnIdentifierTypeChanged();
        partial void OnCorporateActionsIDChanging(string value);
        partial void OnCorporateActionsIDChanged();
        partial void OnCorporateActionsTypeChanging(string value);
        partial void OnCorporateActionsTypeChanged();
        partial void OnCUSIPChanging(string value);
        partial void OnCUSIPChanged();
        partial void OnISINChanging(string value);
        partial void OnISINChanged();
        partial void OnTickerChanging(string value);
        partial void OnTickerChanged();
        partial void OnRICChanging(string value);
        partial void OnRICChanged();
        partial void OnCurrencyCodeChanging(string value);
        partial void OnCurrencyCodeChanged();
        partial void OnDividendCurrencyChanging(string value);
        partial void OnDividendCurrencyChanged();
        partial void OnDividendCurrencyDescriptionChanging(string value);
        partial void OnDividendCurrencyDescriptionChanged();
        partial void OnDividendRateChanging(string value);
        partial void OnDividendRateChanged();
        partial void OnDividendExDateChanging(string value);
        partial void OnDividendExDateChanged();
        partial void OnDividendPayDateChanging(string value);
        partial void OnDividendPayDateChanged();
        partial void OnRecordDateChanging(string value);
        partial void OnRecordDateChanged();
        partial void OnDividendTypeMarkerChanging(string value);
        partial void OnDividendTypeMarkerChanged();
        partial void OnDividendTypeMarkerDescriptionChanging(string value);
        partial void OnDividendTypeMarkerDescriptionChanged();
        partial void OnDividendTaxMarkerChanging(string value);
        partial void OnDividendTaxMarkerChanged();
        partial void OnDividendTaxMarkerDescriptionChanging(string value);
        partial void OnDividendTaxMarkerDescriptionChanged();
        partial void OnDividendFrequencyChanging(string value);
        partial void OnDividendFrequencyChanged();
        partial void OnDividendFrequencyDescriptionChanging(string value);
        partial void OnDividendFrequencyDescriptionChanged();
        partial void OnUserDefinedIdentifierChanging(string value);
        partial void OnUserDefinedIdentifierChanged();
        partial void OnRawCheckSumChanging(System.Data.Linq.Binary value);
        partial void OnRawCheckSumChanged();
#endregion
        public Load_CorpAction()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Load_CorpActions_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Load_CorpActions_ID
        {
            get
            {
                return this._Load_CorpActions_ID;
            }

            set
            {
                if ((this._Load_CorpActions_ID != value))
                {
                    this.OnLoad_CorpActions_IDChanging(value);
                    this.SendPropertyChanging();
                    this._Load_CorpActions_ID = value;
                    this.SendPropertyChanged("Load_CorpActions_ID");
                    this.OnLoad_CorpActions_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Identifier", DbType = "VarChar(255)")]
        public string Identifier
        {
            get
            {
                return this._Identifier;
            }

            set
            {
                if ((this._Identifier != value))
                {
                    this.OnIdentifierChanging(value);
                    this.SendPropertyChanging();
                    this._Identifier = value;
                    this.SendPropertyChanged("Identifier");
                    this.OnIdentifierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdentifierType", DbType = "VarChar(255)")]
        public string IdentifierType
        {
            get
            {
                return this._IdentifierType;
            }

            set
            {
                if ((this._IdentifierType != value))
                {
                    this.OnIdentifierTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdentifierType = value;
                    this.SendPropertyChanged("IdentifierType");
                    this.OnIdentifierTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CorporateActionsID", DbType = "VarChar(255)")]
        public string CorporateActionsID
        {
            get
            {
                return this._CorporateActionsID;
            }

            set
            {
                if ((this._CorporateActionsID != value))
                {
                    this.OnCorporateActionsIDChanging(value);
                    this.SendPropertyChanging();
                    this._CorporateActionsID = value;
                    this.SendPropertyChanged("CorporateActionsID");
                    this.OnCorporateActionsIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CorporateActionsType", DbType = "VarChar(255)")]
        public string CorporateActionsType
        {
            get
            {
                return this._CorporateActionsType;
            }

            set
            {
                if ((this._CorporateActionsType != value))
                {
                    this.OnCorporateActionsTypeChanging(value);
                    this.SendPropertyChanging();
                    this._CorporateActionsType = value;
                    this.SendPropertyChanged("CorporateActionsType");
                    this.OnCorporateActionsTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CUSIP", DbType = "VarChar(255)")]
        public string CUSIP
        {
            get
            {
                return this._CUSIP;
            }

            set
            {
                if ((this._CUSIP != value))
                {
                    this.OnCUSIPChanging(value);
                    this.SendPropertyChanging();
                    this._CUSIP = value;
                    this.SendPropertyChanged("CUSIP");
                    this.OnCUSIPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ISIN", DbType = "VarChar(255)")]
        public string ISIN
        {
            get
            {
                return this._ISIN;
            }

            set
            {
                if ((this._ISIN != value))
                {
                    this.OnISINChanging(value);
                    this.SendPropertyChanging();
                    this._ISIN = value;
                    this.SendPropertyChanged("ISIN");
                    this.OnISINChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ticker", DbType = "VarChar(255)")]
        public string Ticker
        {
            get
            {
                return this._Ticker;
            }

            set
            {
                if ((this._Ticker != value))
                {
                    this.OnTickerChanging(value);
                    this.SendPropertyChanging();
                    this._Ticker = value;
                    this.SendPropertyChanged("Ticker");
                    this.OnTickerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RIC", DbType = "VarChar(255)")]
        public string RIC
        {
            get
            {
                return this._RIC;
            }

            set
            {
                if ((this._RIC != value))
                {
                    this.OnRICChanging(value);
                    this.SendPropertyChanging();
                    this._RIC = value;
                    this.SendPropertyChanged("RIC");
                    this.OnRICChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurrencyCode", DbType = "VarChar(255)")]
        public string CurrencyCode
        {
            get
            {
                return this._CurrencyCode;
            }

            set
            {
                if ((this._CurrencyCode != value))
                {
                    this.OnCurrencyCodeChanging(value);
                    this.SendPropertyChanging();
                    this._CurrencyCode = value;
                    this.SendPropertyChanged("CurrencyCode");
                    this.OnCurrencyCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendCurrency", DbType = "VarChar(255)")]
        public string DividendCurrency
        {
            get
            {
                return this._DividendCurrency;
            }

            set
            {
                if ((this._DividendCurrency != value))
                {
                    this.OnDividendCurrencyChanging(value);
                    this.SendPropertyChanging();
                    this._DividendCurrency = value;
                    this.SendPropertyChanged("DividendCurrency");
                    this.OnDividendCurrencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendCurrencyDescription", DbType = "VarChar(255)")]
        public string DividendCurrencyDescription
        {
            get
            {
                return this._DividendCurrencyDescription;
            }

            set
            {
                if ((this._DividendCurrencyDescription != value))
                {
                    this.OnDividendCurrencyDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DividendCurrencyDescription = value;
                    this.SendPropertyChanged("DividendCurrencyDescription");
                    this.OnDividendCurrencyDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendRate", DbType = "VarChar(255)")]
        public string DividendRate
        {
            get
            {
                return this._DividendRate;
            }

            set
            {
                if ((this._DividendRate != value))
                {
                    this.OnDividendRateChanging(value);
                    this.SendPropertyChanging();
                    this._DividendRate = value;
                    this.SendPropertyChanged("DividendRate");
                    this.OnDividendRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendExDate", DbType = "VarChar(255)")]
        public string DividendExDate
        {
            get
            {
                return this._DividendExDate;
            }

            set
            {
                if ((this._DividendExDate != value))
                {
                    this.OnDividendExDateChanging(value);
                    this.SendPropertyChanging();
                    this._DividendExDate = value;
                    this.SendPropertyChanged("DividendExDate");
                    this.OnDividendExDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendPayDate", DbType = "VarChar(255)")]
        public string DividendPayDate
        {
            get
            {
                return this._DividendPayDate;
            }

            set
            {
                if ((this._DividendPayDate != value))
                {
                    this.OnDividendPayDateChanging(value);
                    this.SendPropertyChanging();
                    this._DividendPayDate = value;
                    this.SendPropertyChanged("DividendPayDate");
                    this.OnDividendPayDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RecordDate", DbType = "VarChar(255)")]
        public string RecordDate
        {
            get
            {
                return this._RecordDate;
            }

            set
            {
                if ((this._RecordDate != value))
                {
                    this.OnRecordDateChanging(value);
                    this.SendPropertyChanging();
                    this._RecordDate = value;
                    this.SendPropertyChanged("RecordDate");
                    this.OnRecordDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendTypeMarker", DbType = "VarChar(255)")]
        public string DividendTypeMarker
        {
            get
            {
                return this._DividendTypeMarker;
            }

            set
            {
                if ((this._DividendTypeMarker != value))
                {
                    this.OnDividendTypeMarkerChanging(value);
                    this.SendPropertyChanging();
                    this._DividendTypeMarker = value;
                    this.SendPropertyChanged("DividendTypeMarker");
                    this.OnDividendTypeMarkerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendTypeMarkerDescription", DbType = "VarChar(255)")]
        public string DividendTypeMarkerDescription
        {
            get
            {
                return this._DividendTypeMarkerDescription;
            }

            set
            {
                if ((this._DividendTypeMarkerDescription != value))
                {
                    this.OnDividendTypeMarkerDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DividendTypeMarkerDescription = value;
                    this.SendPropertyChanged("DividendTypeMarkerDescription");
                    this.OnDividendTypeMarkerDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendTaxMarker", DbType = "VarChar(255)")]
        public string DividendTaxMarker
        {
            get
            {
                return this._DividendTaxMarker;
            }

            set
            {
                if ((this._DividendTaxMarker != value))
                {
                    this.OnDividendTaxMarkerChanging(value);
                    this.SendPropertyChanging();
                    this._DividendTaxMarker = value;
                    this.SendPropertyChanged("DividendTaxMarker");
                    this.OnDividendTaxMarkerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendTaxMarkerDescription", DbType = "VarChar(255)")]
        public string DividendTaxMarkerDescription
        {
            get
            {
                return this._DividendTaxMarkerDescription;
            }

            set
            {
                if ((this._DividendTaxMarkerDescription != value))
                {
                    this.OnDividendTaxMarkerDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DividendTaxMarkerDescription = value;
                    this.SendPropertyChanged("DividendTaxMarkerDescription");
                    this.OnDividendTaxMarkerDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendFrequency", DbType = "VarChar(255)")]
        public string DividendFrequency
        {
            get
            {
                return this._DividendFrequency;
            }

            set
            {
                if ((this._DividendFrequency != value))
                {
                    this.OnDividendFrequencyChanging(value);
                    this.SendPropertyChanging();
                    this._DividendFrequency = value;
                    this.SendPropertyChanged("DividendFrequency");
                    this.OnDividendFrequencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendFrequencyDescription", DbType = "VarChar(255)")]
        public string DividendFrequencyDescription
        {
            get
            {
                return this._DividendFrequencyDescription;
            }

            set
            {
                if ((this._DividendFrequencyDescription != value))
                {
                    this.OnDividendFrequencyDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DividendFrequencyDescription = value;
                    this.SendPropertyChanged("DividendFrequencyDescription");
                    this.OnDividendFrequencyDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserDefinedIdentifier", DbType = "VarChar(255)")]
        public string UserDefinedIdentifier
        {
            get
            {
                return this._UserDefinedIdentifier;
            }

            set
            {
                if ((this._UserDefinedIdentifier != value))
                {
                    this.OnUserDefinedIdentifierChanging(value);
                    this.SendPropertyChanging();
                    this._UserDefinedIdentifier = value;
                    this.SendPropertyChanged("UserDefinedIdentifier");
                    this.OnUserDefinedIdentifierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RawCheckSum", DbType = "VarBinary(20)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary RawCheckSum
        {
            get
            {
                return this._RawCheckSum;
            }

            set
            {
                if ((this._RawCheckSum != value))
                {
                    this.OnRawCheckSumChanging(value);
                    this.SendPropertyChanging();
                    this._RawCheckSum = value;
                    this.SendPropertyChanged("RawCheckSum");
                    this.OnRawCheckSumChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "tr.Index_Code")]
    public partial class Index_Code : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _Index_Code_ID;
        private string _Identifier;
        private string _IDType;
        private string _Name;
        private string _DS_Index_Code;
        private string _DS_List_Index_Code;
        private string _Preferred_Datatype;
        private System.Nullable<System.DateTime> _LoadDateTime;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIndex_Code_IDChanging(int value);
        partial void OnIndex_Code_IDChanged();
        partial void OnIdentifierChanging(string value);
        partial void OnIdentifierChanged();
        partial void OnIDTypeChanging(string value);
        partial void OnIDTypeChanged();
        partial void OnNameChanging(string value);
        partial void OnNameChanged();
        partial void OnDS_Index_CodeChanging(string value);
        partial void OnDS_Index_CodeChanged();
        partial void OnDS_List_Index_CodeChanging(string value);
        partial void OnDS_List_Index_CodeChanged();
        partial void OnPreferred_DatatypeChanging(string value);
        partial void OnPreferred_DatatypeChanged();
        partial void OnLoadDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnLoadDateTimeChanged();
#endregion
        public Index_Code()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Index_Code_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Index_Code_ID
        {
            get
            {
                return this._Index_Code_ID;
            }

            set
            {
                if ((this._Index_Code_ID != value))
                {
                    this.OnIndex_Code_IDChanging(value);
                    this.SendPropertyChanging();
                    this._Index_Code_ID = value;
                    this.SendPropertyChanged("Index_Code_ID");
                    this.OnIndex_Code_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Identifier", DbType = "VarChar(255)")]
        public string Identifier
        {
            get
            {
                return this._Identifier;
            }

            set
            {
                if ((this._Identifier != value))
                {
                    this.OnIdentifierChanging(value);
                    this.SendPropertyChanging();
                    this._Identifier = value;
                    this.SendPropertyChanged("Identifier");
                    this.OnIdentifierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IDType", DbType = "VarChar(255)")]
        public string IDType
        {
            get
            {
                return this._IDType;
            }

            set
            {
                if ((this._IDType != value))
                {
                    this.OnIDTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IDType = value;
                    this.SendPropertyChanged("IDType");
                    this.OnIDTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Name", DbType = "VarChar(255)")]
        public string Name
        {
            get
            {
                return this._Name;
            }

            set
            {
                if ((this._Name != value))
                {
                    this.OnNameChanging(value);
                    this.SendPropertyChanging();
                    this._Name = value;
                    this.SendPropertyChanged("Name");
                    this.OnNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DS_Index_Code", DbType = "VarChar(255)")]
        public string DS_Index_Code
        {
            get
            {
                return this._DS_Index_Code;
            }

            set
            {
                if ((this._DS_Index_Code != value))
                {
                    this.OnDS_Index_CodeChanging(value);
                    this.SendPropertyChanging();
                    this._DS_Index_Code = value;
                    this.SendPropertyChanged("DS_Index_Code");
                    this.OnDS_Index_CodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DS_List_Index_Code", DbType = "VarChar(255)")]
        public string DS_List_Index_Code
        {
            get
            {
                return this._DS_List_Index_Code;
            }

            set
            {
                if ((this._DS_List_Index_Code != value))
                {
                    this.OnDS_List_Index_CodeChanging(value);
                    this.SendPropertyChanging();
                    this._DS_List_Index_Code = value;
                    this.SendPropertyChanged("DS_List_Index_Code");
                    this.OnDS_List_Index_CodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Preferred_Datatype", DbType = "VarChar(255)")]
        public string Preferred_Datatype
        {
            get
            {
                return this._Preferred_Datatype;
            }

            set
            {
                if ((this._Preferred_Datatype != value))
                {
                    this.OnPreferred_DatatypeChanging(value);
                    this.SendPropertyChanging();
                    this._Preferred_Datatype = value;
                    this.SendPropertyChanged("Preferred_Datatype");
                    this.OnPreferred_DatatypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoadDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LoadDateTime
        {
            get
            {
                return this._LoadDateTime;
            }

            set
            {
                if ((this._LoadDateTime != value))
                {
                    this.OnLoadDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._LoadDateTime = value;
                    this.SendPropertyChanged("LoadDateTime");
                    this.OnLoadDateTimeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "tr.Load_Index")]
    public partial class Load_Index : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _Load_Index_ID;
        private string _Symbol;
        private string _SymbolName;
        private string _DataType;
        private string _DataTypeName;
        private string _IndexDate;
        private string _IndexValue;
        private System.Nullable<int> _SecID;
        private System.Data.Linq.Binary _RawCheckSum;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLoad_Index_IDChanging(int value);
        partial void OnLoad_Index_IDChanged();
        partial void OnSymbolChanging(string value);
        partial void OnSymbolChanged();
        partial void OnSymbolNameChanging(string value);
        partial void OnSymbolNameChanged();
        partial void OnDataTypeChanging(string value);
        partial void OnDataTypeChanged();
        partial void OnDataTypeNameChanging(string value);
        partial void OnDataTypeNameChanged();
        partial void OnIndexDateChanging(string value);
        partial void OnIndexDateChanged();
        partial void OnIndexValueChanging(string value);
        partial void OnIndexValueChanged();
        partial void OnSecIDChanging(System.Nullable<int> value);
        partial void OnSecIDChanged();
        partial void OnRawCheckSumChanging(System.Data.Linq.Binary value);
        partial void OnRawCheckSumChanged();
#endregion
        public Load_Index()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Load_Index_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Load_Index_ID
        {
            get
            {
                return this._Load_Index_ID;
            }

            set
            {
                if ((this._Load_Index_ID != value))
                {
                    this.OnLoad_Index_IDChanging(value);
                    this.SendPropertyChanging();
                    this._Load_Index_ID = value;
                    this.SendPropertyChanged("Load_Index_ID");
                    this.OnLoad_Index_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Symbol", DbType = "VarChar(255)")]
        public string Symbol
        {
            get
            {
                return this._Symbol;
            }

            set
            {
                if ((this._Symbol != value))
                {
                    this.OnSymbolChanging(value);
                    this.SendPropertyChanging();
                    this._Symbol = value;
                    this.SendPropertyChanged("Symbol");
                    this.OnSymbolChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SymbolName", DbType = "VarChar(255)")]
        public string SymbolName
        {
            get
            {
                return this._SymbolName;
            }

            set
            {
                if ((this._SymbolName != value))
                {
                    this.OnSymbolNameChanging(value);
                    this.SendPropertyChanging();
                    this._SymbolName = value;
                    this.SendPropertyChanged("SymbolName");
                    this.OnSymbolNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DataType", DbType = "VarChar(255)")]
        public string DataType
        {
            get
            {
                return this._DataType;
            }

            set
            {
                if ((this._DataType != value))
                {
                    this.OnDataTypeChanging(value);
                    this.SendPropertyChanging();
                    this._DataType = value;
                    this.SendPropertyChanged("DataType");
                    this.OnDataTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DataTypeName", DbType = "VarChar(255)")]
        public string DataTypeName
        {
            get
            {
                return this._DataTypeName;
            }

            set
            {
                if ((this._DataTypeName != value))
                {
                    this.OnDataTypeNameChanging(value);
                    this.SendPropertyChanging();
                    this._DataTypeName = value;
                    this.SendPropertyChanged("DataTypeName");
                    this.OnDataTypeNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IndexDate", DbType = "VarChar(255)")]
        public string IndexDate
        {
            get
            {
                return this._IndexDate;
            }

            set
            {
                if ((this._IndexDate != value))
                {
                    this.OnIndexDateChanging(value);
                    this.SendPropertyChanging();
                    this._IndexDate = value;
                    this.SendPropertyChanged("IndexDate");
                    this.OnIndexDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IndexValue", DbType = "VarChar(255)")]
        public string IndexValue
        {
            get
            {
                return this._IndexValue;
            }

            set
            {
                if ((this._IndexValue != value))
                {
                    this.OnIndexValueChanging(value);
                    this.SendPropertyChanging();
                    this._IndexValue = value;
                    this.SendPropertyChanged("IndexValue");
                    this.OnIndexValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecID", DbType = "Int")]
        public System.Nullable<int> SecID
        {
            get
            {
                return this._SecID;
            }

            set
            {
                if ((this._SecID != value))
                {
                    this.OnSecIDChanging(value);
                    this.SendPropertyChanging();
                    this._SecID = value;
                    this.SendPropertyChanged("SecID");
                    this.OnSecIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RawCheckSum", DbType = "VarBinary(20)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary RawCheckSum
        {
            get
            {
                return this._RawCheckSum;
            }

            set
            {
                if ((this._RawCheckSum != value))
                {
                    this.OnRawCheckSumChanging(value);
                    this.SendPropertyChanging();
                    this._RawCheckSum = value;
                    this.SendPropertyChanged("RawCheckSum");
                    this.OnRawCheckSumChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.NewEditTrans")]
    public partial class NewEditTran : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _NewEditTransID;
        private System.Nullable<int> _TransID;
        private System.Nullable<int> _TransProcessCodeID;
        private System.Nullable<decimal> _ProcessOrd;
        private System.Nullable<bool> _StaticData;
        private string _DPTransID;
        private string _DPLotID;
        private System.Nullable<int> _AcctID;
        private System.Nullable<int> _SubAcctID;
        private System.Nullable<int> _ReliefMethod;
        private System.Nullable<int> _SecID;
        private System.Nullable<int> _TCodeID;
        private string _DPTransCodeName;
        private System.Nullable<System.DateTime> _EffectiveDate;
        private System.Nullable<System.DateTime> _TradeDate;
        private System.Nullable<System.DateTime> _SettleDate;
        private System.Nullable<System.DateTime> _AcquisitionTradeDate;
        private System.Nullable<System.DateTime> _AcquisitionSettleDate;
        private System.Nullable<decimal> _Shrs;
        private System.Nullable<decimal> _OFShrs;
        private System.Nullable<decimal> _Price;
        private System.Nullable<decimal> _PriceMult;
        private System.Nullable<int> _TradeCCYID;
        private System.Nullable<int> _SettleCCYID;
        private System.Nullable<int> _BaseCCYID;
        private System.Nullable<decimal> _TradeFXRate;
        private System.Nullable<decimal> _SettleFXRate;
        private System.Nullable<decimal> _BaseFXRate;
        private System.Nullable<decimal> _GrossLocal;
        private System.Nullable<decimal> _GrossBase;
        private System.Nullable<decimal> _Fees;
        private System.Nullable<decimal> _ForeignWithhold;
        private System.Nullable<decimal> _NetLocal;
        private System.Nullable<decimal> _NetBase;
        private System.Nullable<decimal> _AILocal;
        private System.Nullable<decimal> _AIBase;
        private System.Nullable<decimal> _AALocal;
        private System.Nullable<decimal> _AABase;
        private System.Nullable<decimal> _OrigCostLocal;
        private System.Nullable<decimal> _OrigCostBase;
        private System.Nullable<decimal> _BookCostLocal;
        private System.Nullable<decimal> _BookCostBase;
        private System.Nullable<decimal> _RecordCostLocal;
        private System.Nullable<decimal> _RecordCostBase;
        private System.Nullable<decimal> _PurYld;
        private System.Nullable<System.DateTime> _DPProcessDate;
        private System.Nullable<System.DateTime> _PerfTradeDate;
        private System.Nullable<System.DateTime> _PerfSettleDate;
        private System.Nullable<System.DateTime> _AcctingTradeDate;
        private System.Nullable<System.DateTime> _AcctingSettleDate;
        private string _Comment;
        private System.Nullable<System.DateTime> _CreatedDate;
        private System.Nullable<int> _CorpActsID;
        private System.Nullable<int> _CorpActsChildID;
        private System.Nullable<System.DateTime> _UpdatedDate;
        private System.Nullable<System.DateTime> _ExDate;
        private System.Nullable<System.DateTime> _PayDate;
        private System.Nullable<decimal> _DPGainLoss;
        private System.Nullable<decimal> _RecallableDistPct;
        private System.Nullable<System.DateTime> _RecallableExpDate;
        private System.Nullable<bool> _Final;
        private System.Nullable<int> _DPID;
        private System.Nullable<int> _UserID;
        private System.Nullable<System.DateTime> _LoadDateTime;
        private string _Stat;
        private System.Nullable<System.DateTime> _RetiredDateTime;
        private System.Nullable<int> _LoadSourceID;
        private string _TmpTransUniqueKeyID;
        private System.Nullable<int> _OriginalTransID;
        private System.Nullable<int> _EditUserID;
        private System.Nullable<int> _TransTypeID;
        private System.Nullable<int> _TransSubTypeID;
        private System.Nullable<int> _LinkAcctID;
        private System.Nullable<int> _LinkSubAcctID;
        private System.Nullable<int> _SecEntAllocID;
        private string _UserDefined1;
        private string _UserDefined2;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnNewEditTransIDChanging(int value);
        partial void OnNewEditTransIDChanged();
        partial void OnTransIDChanging(System.Nullable<int> value);
        partial void OnTransIDChanged();
        partial void OnTransProcessCodeIDChanging(System.Nullable<int> value);
        partial void OnTransProcessCodeIDChanged();
        partial void OnProcessOrdChanging(System.Nullable<decimal> value);
        partial void OnProcessOrdChanged();
        partial void OnStaticDataChanging(System.Nullable<bool> value);
        partial void OnStaticDataChanged();
        partial void OnDPTransIDChanging(string value);
        partial void OnDPTransIDChanged();
        partial void OnDPLotIDChanging(string value);
        partial void OnDPLotIDChanged();
        partial void OnAcctIDChanging(System.Nullable<int> value);
        partial void OnAcctIDChanged();
        partial void OnSubAcctIDChanging(System.Nullable<int> value);
        partial void OnSubAcctIDChanged();
        partial void OnReliefMethodChanging(System.Nullable<int> value);
        partial void OnReliefMethodChanged();
        partial void OnSecIDChanging(System.Nullable<int> value);
        partial void OnSecIDChanged();
        partial void OnTCodeIDChanging(System.Nullable<int> value);
        partial void OnTCodeIDChanged();
        partial void OnDPTransCodeNameChanging(string value);
        partial void OnDPTransCodeNameChanged();
        partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
        partial void OnEffectiveDateChanged();
        partial void OnTradeDateChanging(System.Nullable<System.DateTime> value);
        partial void OnTradeDateChanged();
        partial void OnSettleDateChanging(System.Nullable<System.DateTime> value);
        partial void OnSettleDateChanged();
        partial void OnAcquisitionTradeDateChanging(System.Nullable<System.DateTime> value);
        partial void OnAcquisitionTradeDateChanged();
        partial void OnAcquisitionSettleDateChanging(System.Nullable<System.DateTime> value);
        partial void OnAcquisitionSettleDateChanged();
        partial void OnShrsChanging(System.Nullable<decimal> value);
        partial void OnShrsChanged();
        partial void OnOFShrsChanging(System.Nullable<decimal> value);
        partial void OnOFShrsChanged();
        partial void OnPriceChanging(System.Nullable<decimal> value);
        partial void OnPriceChanged();
        partial void OnPriceMultChanging(System.Nullable<decimal> value);
        partial void OnPriceMultChanged();
        partial void OnTradeCCYIDChanging(System.Nullable<int> value);
        partial void OnTradeCCYIDChanged();
        partial void OnSettleCCYIDChanging(System.Nullable<int> value);
        partial void OnSettleCCYIDChanged();
        partial void OnBaseCCYIDChanging(System.Nullable<int> value);
        partial void OnBaseCCYIDChanged();
        partial void OnTradeFXRateChanging(System.Nullable<decimal> value);
        partial void OnTradeFXRateChanged();
        partial void OnSettleFXRateChanging(System.Nullable<decimal> value);
        partial void OnSettleFXRateChanged();
        partial void OnBaseFXRateChanging(System.Nullable<decimal> value);
        partial void OnBaseFXRateChanged();
        partial void OnGrossLocalChanging(System.Nullable<decimal> value);
        partial void OnGrossLocalChanged();
        partial void OnGrossBaseChanging(System.Nullable<decimal> value);
        partial void OnGrossBaseChanged();
        partial void OnFeesChanging(System.Nullable<decimal> value);
        partial void OnFeesChanged();
        partial void OnForeignWithholdChanging(System.Nullable<decimal> value);
        partial void OnForeignWithholdChanged();
        partial void OnNetLocalChanging(System.Nullable<decimal> value);
        partial void OnNetLocalChanged();
        partial void OnNetBaseChanging(System.Nullable<decimal> value);
        partial void OnNetBaseChanged();
        partial void OnAILocalChanging(System.Nullable<decimal> value);
        partial void OnAILocalChanged();
        partial void OnAIBaseChanging(System.Nullable<decimal> value);
        partial void OnAIBaseChanged();
        partial void OnAALocalChanging(System.Nullable<decimal> value);
        partial void OnAALocalChanged();
        partial void OnAABaseChanging(System.Nullable<decimal> value);
        partial void OnAABaseChanged();
        partial void OnOrigCostLocalChanging(System.Nullable<decimal> value);
        partial void OnOrigCostLocalChanged();
        partial void OnOrigCostBaseChanging(System.Nullable<decimal> value);
        partial void OnOrigCostBaseChanged();
        partial void OnBookCostLocalChanging(System.Nullable<decimal> value);
        partial void OnBookCostLocalChanged();
        partial void OnBookCostBaseChanging(System.Nullable<decimal> value);
        partial void OnBookCostBaseChanged();
        partial void OnRecordCostLocalChanging(System.Nullable<decimal> value);
        partial void OnRecordCostLocalChanged();
        partial void OnRecordCostBaseChanging(System.Nullable<decimal> value);
        partial void OnRecordCostBaseChanged();
        partial void OnPurYldChanging(System.Nullable<decimal> value);
        partial void OnPurYldChanged();
        partial void OnDPProcessDateChanging(System.Nullable<System.DateTime> value);
        partial void OnDPProcessDateChanged();
        partial void OnPerfTradeDateChanging(System.Nullable<System.DateTime> value);
        partial void OnPerfTradeDateChanged();
        partial void OnPerfSettleDateChanging(System.Nullable<System.DateTime> value);
        partial void OnPerfSettleDateChanged();
        partial void OnAcctingTradeDateChanging(System.Nullable<System.DateTime> value);
        partial void OnAcctingTradeDateChanged();
        partial void OnAcctingSettleDateChanging(System.Nullable<System.DateTime> value);
        partial void OnAcctingSettleDateChanged();
        partial void OnCommentChanging(string value);
        partial void OnCommentChanged();
        partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnCreatedDateChanged();
        partial void OnCorpActsIDChanging(System.Nullable<int> value);
        partial void OnCorpActsIDChanged();
        partial void OnCorpActsChildIDChanging(System.Nullable<int> value);
        partial void OnCorpActsChildIDChanged();
        partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
        partial void OnUpdatedDateChanged();
        partial void OnExDateChanging(System.Nullable<System.DateTime> value);
        partial void OnExDateChanged();
        partial void OnPayDateChanging(System.Nullable<System.DateTime> value);
        partial void OnPayDateChanged();
        partial void OnDPGainLossChanging(System.Nullable<decimal> value);
        partial void OnDPGainLossChanged();
        partial void OnRecallableDistPctChanging(System.Nullable<decimal> value);
        partial void OnRecallableDistPctChanged();
        partial void OnRecallableExpDateChanging(System.Nullable<System.DateTime> value);
        partial void OnRecallableExpDateChanged();
        partial void OnFinalChanging(System.Nullable<bool> value);
        partial void OnFinalChanged();
        partial void OnDPIDChanging(System.Nullable<int> value);
        partial void OnDPIDChanged();
        partial void OnUserIDChanging(System.Nullable<int> value);
        partial void OnUserIDChanged();
        partial void OnLoadDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnLoadDateTimeChanged();
        partial void OnStatChanging(string value);
        partial void OnStatChanged();
        partial void OnRetiredDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnRetiredDateTimeChanged();
        partial void OnLoadSourceIDChanging(System.Nullable<int> value);
        partial void OnLoadSourceIDChanged();
        partial void OnTmpTransUniqueKeyIDChanging(string value);
        partial void OnTmpTransUniqueKeyIDChanged();
        partial void OnOriginalTransIDChanging(System.Nullable<int> value);
        partial void OnOriginalTransIDChanged();
        partial void OnEditUserIDChanging(System.Nullable<int> value);
        partial void OnEditUserIDChanged();
        partial void OnTransTypeIDChanging(System.Nullable<int> value);
        partial void OnTransTypeIDChanged();
        partial void OnTransSubTypeIDChanging(System.Nullable<int> value);
        partial void OnTransSubTypeIDChanged();
        partial void OnLinkAcctIDChanging(System.Nullable<int> value);
        partial void OnLinkAcctIDChanged();
        partial void OnLinkSubAcctIDChanging(System.Nullable<int> value);
        partial void OnLinkSubAcctIDChanged();
        partial void OnSecEntAllocIDChanging(System.Nullable<int> value);
        partial void OnSecEntAllocIDChanged();
        partial void OnUserDefined1Changing(string value);
        partial void OnUserDefined1Changed();
        partial void OnUserDefined2Changing(string value);
        partial void OnUserDefined2Changed();
#endregion
        public NewEditTran()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NewEditTransID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int NewEditTransID
        {
            get
            {
                return this._NewEditTransID;
            }

            set
            {
                if ((this._NewEditTransID != value))
                {
                    this.OnNewEditTransIDChanging(value);
                    this.SendPropertyChanging();
                    this._NewEditTransID = value;
                    this.SendPropertyChanged("NewEditTransID");
                    this.OnNewEditTransIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransID", DbType = "Int")]
        public System.Nullable<int> TransID
        {
            get
            {
                return this._TransID;
            }

            set
            {
                if ((this._TransID != value))
                {
                    this.OnTransIDChanging(value);
                    this.SendPropertyChanging();
                    this._TransID = value;
                    this.SendPropertyChanged("TransID");
                    this.OnTransIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransProcessCodeID", DbType = "Int")]
        public System.Nullable<int> TransProcessCodeID
        {
            get
            {
                return this._TransProcessCodeID;
            }

            set
            {
                if ((this._TransProcessCodeID != value))
                {
                    this.OnTransProcessCodeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TransProcessCodeID = value;
                    this.SendPropertyChanged("TransProcessCodeID");
                    this.OnTransProcessCodeIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProcessOrd", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> ProcessOrd
        {
            get
            {
                return this._ProcessOrd;
            }

            set
            {
                if ((this._ProcessOrd != value))
                {
                    this.OnProcessOrdChanging(value);
                    this.SendPropertyChanging();
                    this._ProcessOrd = value;
                    this.SendPropertyChanged("ProcessOrd");
                    this.OnProcessOrdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StaticData", DbType = "Bit")]
        public System.Nullable<bool> StaticData
        {
            get
            {
                return this._StaticData;
            }

            set
            {
                if ((this._StaticData != value))
                {
                    this.OnStaticDataChanging(value);
                    this.SendPropertyChanging();
                    this._StaticData = value;
                    this.SendPropertyChanged("StaticData");
                    this.OnStaticDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPTransID", DbType = "VarChar(255)")]
        public string DPTransID
        {
            get
            {
                return this._DPTransID;
            }

            set
            {
                if ((this._DPTransID != value))
                {
                    this.OnDPTransIDChanging(value);
                    this.SendPropertyChanging();
                    this._DPTransID = value;
                    this.SendPropertyChanged("DPTransID");
                    this.OnDPTransIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPLotID", DbType = "VarChar(255)")]
        public string DPLotID
        {
            get
            {
                return this._DPLotID;
            }

            set
            {
                if ((this._DPLotID != value))
                {
                    this.OnDPLotIDChanging(value);
                    this.SendPropertyChanging();
                    this._DPLotID = value;
                    this.SendPropertyChanged("DPLotID");
                    this.OnDPLotIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AcctID", DbType = "Int")]
        public System.Nullable<int> AcctID
        {
            get
            {
                return this._AcctID;
            }

            set
            {
                if ((this._AcctID != value))
                {
                    this.OnAcctIDChanging(value);
                    this.SendPropertyChanging();
                    this._AcctID = value;
                    this.SendPropertyChanged("AcctID");
                    this.OnAcctIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SubAcctID", DbType = "Int")]
        public System.Nullable<int> SubAcctID
        {
            get
            {
                return this._SubAcctID;
            }

            set
            {
                if ((this._SubAcctID != value))
                {
                    this.OnSubAcctIDChanging(value);
                    this.SendPropertyChanging();
                    this._SubAcctID = value;
                    this.SendPropertyChanged("SubAcctID");
                    this.OnSubAcctIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ReliefMethod", DbType = "Int")]
        public System.Nullable<int> ReliefMethod
        {
            get
            {
                return this._ReliefMethod;
            }

            set
            {
                if ((this._ReliefMethod != value))
                {
                    this.OnReliefMethodChanging(value);
                    this.SendPropertyChanging();
                    this._ReliefMethod = value;
                    this.SendPropertyChanged("ReliefMethod");
                    this.OnReliefMethodChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecID", DbType = "Int")]
        public System.Nullable<int> SecID
        {
            get
            {
                return this._SecID;
            }

            set
            {
                if ((this._SecID != value))
                {
                    this.OnSecIDChanging(value);
                    this.SendPropertyChanging();
                    this._SecID = value;
                    this.SendPropertyChanged("SecID");
                    this.OnSecIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TCodeID", DbType = "Int")]
        public System.Nullable<int> TCodeID
        {
            get
            {
                return this._TCodeID;
            }

            set
            {
                if ((this._TCodeID != value))
                {
                    this.OnTCodeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TCodeID = value;
                    this.SendPropertyChanged("TCodeID");
                    this.OnTCodeIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPTransCodeName", DbType = "VarChar(255)")]
        public string DPTransCodeName
        {
            get
            {
                return this._DPTransCodeName;
            }

            set
            {
                if ((this._DPTransCodeName != value))
                {
                    this.OnDPTransCodeNameChanging(value);
                    this.SendPropertyChanging();
                    this._DPTransCodeName = value;
                    this.SendPropertyChanged("DPTransCodeName");
                    this.OnDPTransCodeNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EffectiveDate", DbType = "Date")]
        public System.Nullable<System.DateTime> EffectiveDate
        {
            get
            {
                return this._EffectiveDate;
            }

            set
            {
                if ((this._EffectiveDate != value))
                {
                    this.OnEffectiveDateChanging(value);
                    this.SendPropertyChanging();
                    this._EffectiveDate = value;
                    this.SendPropertyChanged("EffectiveDate");
                    this.OnEffectiveDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TradeDate", DbType = "Date")]
        public System.Nullable<System.DateTime> TradeDate
        {
            get
            {
                return this._TradeDate;
            }

            set
            {
                if ((this._TradeDate != value))
                {
                    this.OnTradeDateChanging(value);
                    this.SendPropertyChanging();
                    this._TradeDate = value;
                    this.SendPropertyChanged("TradeDate");
                    this.OnTradeDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettleDate", DbType = "Date")]
        public System.Nullable<System.DateTime> SettleDate
        {
            get
            {
                return this._SettleDate;
            }

            set
            {
                if ((this._SettleDate != value))
                {
                    this.OnSettleDateChanging(value);
                    this.SendPropertyChanging();
                    this._SettleDate = value;
                    this.SendPropertyChanged("SettleDate");
                    this.OnSettleDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AcquisitionTradeDate", DbType = "Date")]
        public System.Nullable<System.DateTime> AcquisitionTradeDate
        {
            get
            {
                return this._AcquisitionTradeDate;
            }

            set
            {
                if ((this._AcquisitionTradeDate != value))
                {
                    this.OnAcquisitionTradeDateChanging(value);
                    this.SendPropertyChanging();
                    this._AcquisitionTradeDate = value;
                    this.SendPropertyChanged("AcquisitionTradeDate");
                    this.OnAcquisitionTradeDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AcquisitionSettleDate", DbType = "Date")]
        public System.Nullable<System.DateTime> AcquisitionSettleDate
        {
            get
            {
                return this._AcquisitionSettleDate;
            }

            set
            {
                if ((this._AcquisitionSettleDate != value))
                {
                    this.OnAcquisitionSettleDateChanging(value);
                    this.SendPropertyChanging();
                    this._AcquisitionSettleDate = value;
                    this.SendPropertyChanged("AcquisitionSettleDate");
                    this.OnAcquisitionSettleDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Shrs", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> Shrs
        {
            get
            {
                return this._Shrs;
            }

            set
            {
                if ((this._Shrs != value))
                {
                    this.OnShrsChanging(value);
                    this.SendPropertyChanging();
                    this._Shrs = value;
                    this.SendPropertyChanged("Shrs");
                    this.OnShrsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OFShrs", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> OFShrs
        {
            get
            {
                return this._OFShrs;
            }

            set
            {
                if ((this._OFShrs != value))
                {
                    this.OnOFShrsChanging(value);
                    this.SendPropertyChanging();
                    this._OFShrs = value;
                    this.SendPropertyChanged("OFShrs");
                    this.OnOFShrsChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Price", DbType = "Decimal(32,16)")]
        public System.Nullable<decimal> Price
        {
            get
            {
                return this._Price;
            }

            set
            {
                if ((this._Price != value))
                {
                    this.OnPriceChanging(value);
                    this.SendPropertyChanging();
                    this._Price = value;
                    this.SendPropertyChanged("Price");
                    this.OnPriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PriceMult", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> PriceMult
        {
            get
            {
                return this._PriceMult;
            }

            set
            {
                if ((this._PriceMult != value))
                {
                    this.OnPriceMultChanging(value);
                    this.SendPropertyChanging();
                    this._PriceMult = value;
                    this.SendPropertyChanged("PriceMult");
                    this.OnPriceMultChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TradeCCYID", DbType = "Int")]
        public System.Nullable<int> TradeCCYID
        {
            get
            {
                return this._TradeCCYID;
            }

            set
            {
                if ((this._TradeCCYID != value))
                {
                    this.OnTradeCCYIDChanging(value);
                    this.SendPropertyChanging();
                    this._TradeCCYID = value;
                    this.SendPropertyChanged("TradeCCYID");
                    this.OnTradeCCYIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettleCCYID", DbType = "Int")]
        public System.Nullable<int> SettleCCYID
        {
            get
            {
                return this._SettleCCYID;
            }

            set
            {
                if ((this._SettleCCYID != value))
                {
                    this.OnSettleCCYIDChanging(value);
                    this.SendPropertyChanging();
                    this._SettleCCYID = value;
                    this.SendPropertyChanged("SettleCCYID");
                    this.OnSettleCCYIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BaseCCYID", DbType = "Int")]
        public System.Nullable<int> BaseCCYID
        {
            get
            {
                return this._BaseCCYID;
            }

            set
            {
                if ((this._BaseCCYID != value))
                {
                    this.OnBaseCCYIDChanging(value);
                    this.SendPropertyChanging();
                    this._BaseCCYID = value;
                    this.SendPropertyChanged("BaseCCYID");
                    this.OnBaseCCYIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TradeFXRate", DbType = "Decimal(32,16)")]
        public System.Nullable<decimal> TradeFXRate
        {
            get
            {
                return this._TradeFXRate;
            }

            set
            {
                if ((this._TradeFXRate != value))
                {
                    this.OnTradeFXRateChanging(value);
                    this.SendPropertyChanging();
                    this._TradeFXRate = value;
                    this.SendPropertyChanged("TradeFXRate");
                    this.OnTradeFXRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SettleFXRate", DbType = "Decimal(32,16)")]
        public System.Nullable<decimal> SettleFXRate
        {
            get
            {
                return this._SettleFXRate;
            }

            set
            {
                if ((this._SettleFXRate != value))
                {
                    this.OnSettleFXRateChanging(value);
                    this.SendPropertyChanging();
                    this._SettleFXRate = value;
                    this.SendPropertyChanged("SettleFXRate");
                    this.OnSettleFXRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BaseFXRate", DbType = "Decimal(32,16)")]
        public System.Nullable<decimal> BaseFXRate
        {
            get
            {
                return this._BaseFXRate;
            }

            set
            {
                if ((this._BaseFXRate != value))
                {
                    this.OnBaseFXRateChanging(value);
                    this.SendPropertyChanging();
                    this._BaseFXRate = value;
                    this.SendPropertyChanged("BaseFXRate");
                    this.OnBaseFXRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GrossLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> GrossLocal
        {
            get
            {
                return this._GrossLocal;
            }

            set
            {
                if ((this._GrossLocal != value))
                {
                    this.OnGrossLocalChanging(value);
                    this.SendPropertyChanging();
                    this._GrossLocal = value;
                    this.SendPropertyChanged("GrossLocal");
                    this.OnGrossLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GrossBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> GrossBase
        {
            get
            {
                return this._GrossBase;
            }

            set
            {
                if ((this._GrossBase != value))
                {
                    this.OnGrossBaseChanging(value);
                    this.SendPropertyChanging();
                    this._GrossBase = value;
                    this.SendPropertyChanged("GrossBase");
                    this.OnGrossBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Fees", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> Fees
        {
            get
            {
                return this._Fees;
            }

            set
            {
                if ((this._Fees != value))
                {
                    this.OnFeesChanging(value);
                    this.SendPropertyChanging();
                    this._Fees = value;
                    this.SendPropertyChanged("Fees");
                    this.OnFeesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ForeignWithhold", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> ForeignWithhold
        {
            get
            {
                return this._ForeignWithhold;
            }

            set
            {
                if ((this._ForeignWithhold != value))
                {
                    this.OnForeignWithholdChanging(value);
                    this.SendPropertyChanging();
                    this._ForeignWithhold = value;
                    this.SendPropertyChanged("ForeignWithhold");
                    this.OnForeignWithholdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NetLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> NetLocal
        {
            get
            {
                return this._NetLocal;
            }

            set
            {
                if ((this._NetLocal != value))
                {
                    this.OnNetLocalChanging(value);
                    this.SendPropertyChanging();
                    this._NetLocal = value;
                    this.SendPropertyChanged("NetLocal");
                    this.OnNetLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NetBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> NetBase
        {
            get
            {
                return this._NetBase;
            }

            set
            {
                if ((this._NetBase != value))
                {
                    this.OnNetBaseChanging(value);
                    this.SendPropertyChanging();
                    this._NetBase = value;
                    this.SendPropertyChanged("NetBase");
                    this.OnNetBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AILocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> AILocal
        {
            get
            {
                return this._AILocal;
            }

            set
            {
                if ((this._AILocal != value))
                {
                    this.OnAILocalChanging(value);
                    this.SendPropertyChanging();
                    this._AILocal = value;
                    this.SendPropertyChanged("AILocal");
                    this.OnAILocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AIBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> AIBase
        {
            get
            {
                return this._AIBase;
            }

            set
            {
                if ((this._AIBase != value))
                {
                    this.OnAIBaseChanging(value);
                    this.SendPropertyChanging();
                    this._AIBase = value;
                    this.SendPropertyChanged("AIBase");
                    this.OnAIBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AALocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> AALocal
        {
            get
            {
                return this._AALocal;
            }

            set
            {
                if ((this._AALocal != value))
                {
                    this.OnAALocalChanging(value);
                    this.SendPropertyChanging();
                    this._AALocal = value;
                    this.SendPropertyChanged("AALocal");
                    this.OnAALocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AABase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> AABase
        {
            get
            {
                return this._AABase;
            }

            set
            {
                if ((this._AABase != value))
                {
                    this.OnAABaseChanging(value);
                    this.SendPropertyChanging();
                    this._AABase = value;
                    this.SendPropertyChanged("AABase");
                    this.OnAABaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrigCostLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> OrigCostLocal
        {
            get
            {
                return this._OrigCostLocal;
            }

            set
            {
                if ((this._OrigCostLocal != value))
                {
                    this.OnOrigCostLocalChanging(value);
                    this.SendPropertyChanging();
                    this._OrigCostLocal = value;
                    this.SendPropertyChanged("OrigCostLocal");
                    this.OnOrigCostLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OrigCostBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> OrigCostBase
        {
            get
            {
                return this._OrigCostBase;
            }

            set
            {
                if ((this._OrigCostBase != value))
                {
                    this.OnOrigCostBaseChanging(value);
                    this.SendPropertyChanging();
                    this._OrigCostBase = value;
                    this.SendPropertyChanged("OrigCostBase");
                    this.OnOrigCostBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BookCostLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> BookCostLocal
        {
            get
            {
                return this._BookCostLocal;
            }

            set
            {
                if ((this._BookCostLocal != value))
                {
                    this.OnBookCostLocalChanging(value);
                    this.SendPropertyChanging();
                    this._BookCostLocal = value;
                    this.SendPropertyChanged("BookCostLocal");
                    this.OnBookCostLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BookCostBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> BookCostBase
        {
            get
            {
                return this._BookCostBase;
            }

            set
            {
                if ((this._BookCostBase != value))
                {
                    this.OnBookCostBaseChanging(value);
                    this.SendPropertyChanging();
                    this._BookCostBase = value;
                    this.SendPropertyChanged("BookCostBase");
                    this.OnBookCostBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RecordCostLocal", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> RecordCostLocal
        {
            get
            {
                return this._RecordCostLocal;
            }

            set
            {
                if ((this._RecordCostLocal != value))
                {
                    this.OnRecordCostLocalChanging(value);
                    this.SendPropertyChanging();
                    this._RecordCostLocal = value;
                    this.SendPropertyChanged("RecordCostLocal");
                    this.OnRecordCostLocalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RecordCostBase", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> RecordCostBase
        {
            get
            {
                return this._RecordCostBase;
            }

            set
            {
                if ((this._RecordCostBase != value))
                {
                    this.OnRecordCostBaseChanging(value);
                    this.SendPropertyChanging();
                    this._RecordCostBase = value;
                    this.SendPropertyChanged("RecordCostBase");
                    this.OnRecordCostBaseChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PurYld", DbType = "Decimal(32,8)")]
        public System.Nullable<decimal> PurYld
        {
            get
            {
                return this._PurYld;
            }

            set
            {
                if ((this._PurYld != value))
                {
                    this.OnPurYldChanging(value);
                    this.SendPropertyChanging();
                    this._PurYld = value;
                    this.SendPropertyChanged("PurYld");
                    this.OnPurYldChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPProcessDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> DPProcessDate
        {
            get
            {
                return this._DPProcessDate;
            }

            set
            {
                if ((this._DPProcessDate != value))
                {
                    this.OnDPProcessDateChanging(value);
                    this.SendPropertyChanging();
                    this._DPProcessDate = value;
                    this.SendPropertyChanged("DPProcessDate");
                    this.OnDPProcessDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PerfTradeDate", DbType = "Date")]
        public System.Nullable<System.DateTime> PerfTradeDate
        {
            get
            {
                return this._PerfTradeDate;
            }

            set
            {
                if ((this._PerfTradeDate != value))
                {
                    this.OnPerfTradeDateChanging(value);
                    this.SendPropertyChanging();
                    this._PerfTradeDate = value;
                    this.SendPropertyChanged("PerfTradeDate");
                    this.OnPerfTradeDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PerfSettleDate", DbType = "Date")]
        public System.Nullable<System.DateTime> PerfSettleDate
        {
            get
            {
                return this._PerfSettleDate;
            }

            set
            {
                if ((this._PerfSettleDate != value))
                {
                    this.OnPerfSettleDateChanging(value);
                    this.SendPropertyChanging();
                    this._PerfSettleDate = value;
                    this.SendPropertyChanged("PerfSettleDate");
                    this.OnPerfSettleDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AcctingTradeDate", DbType = "Date")]
        public System.Nullable<System.DateTime> AcctingTradeDate
        {
            get
            {
                return this._AcctingTradeDate;
            }

            set
            {
                if ((this._AcctingTradeDate != value))
                {
                    this.OnAcctingTradeDateChanging(value);
                    this.SendPropertyChanging();
                    this._AcctingTradeDate = value;
                    this.SendPropertyChanged("AcctingTradeDate");
                    this.OnAcctingTradeDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AcctingSettleDate", DbType = "Date")]
        public System.Nullable<System.DateTime> AcctingSettleDate
        {
            get
            {
                return this._AcctingSettleDate;
            }

            set
            {
                if ((this._AcctingSettleDate != value))
                {
                    this.OnAcctingSettleDateChanging(value);
                    this.SendPropertyChanging();
                    this._AcctingSettleDate = value;
                    this.SendPropertyChanged("AcctingSettleDate");
                    this.OnAcctingSettleDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Comment", DbType = "VarChar(255)")]
        public string Comment
        {
            get
            {
                return this._Comment;
            }

            set
            {
                if ((this._Comment != value))
                {
                    this.OnCommentChanging(value);
                    this.SendPropertyChanging();
                    this._Comment = value;
                    this.SendPropertyChanged("Comment");
                    this.OnCommentChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CreatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> CreatedDate
        {
            get
            {
                return this._CreatedDate;
            }

            set
            {
                if ((this._CreatedDate != value))
                {
                    this.OnCreatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._CreatedDate = value;
                    this.SendPropertyChanged("CreatedDate");
                    this.OnCreatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CorpActsID", DbType = "Int")]
        public System.Nullable<int> CorpActsID
        {
            get
            {
                return this._CorpActsID;
            }

            set
            {
                if ((this._CorpActsID != value))
                {
                    this.OnCorpActsIDChanging(value);
                    this.SendPropertyChanging();
                    this._CorpActsID = value;
                    this.SendPropertyChanged("CorpActsID");
                    this.OnCorpActsIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CorpActsChildID", DbType = "Int")]
        public System.Nullable<int> CorpActsChildID
        {
            get
            {
                return this._CorpActsChildID;
            }

            set
            {
                if ((this._CorpActsChildID != value))
                {
                    this.OnCorpActsChildIDChanging(value);
                    this.SendPropertyChanging();
                    this._CorpActsChildID = value;
                    this.SendPropertyChanged("CorpActsChildID");
                    this.OnCorpActsChildIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdatedDate", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdatedDate
        {
            get
            {
                return this._UpdatedDate;
            }

            set
            {
                if ((this._UpdatedDate != value))
                {
                    this.OnUpdatedDateChanging(value);
                    this.SendPropertyChanging();
                    this._UpdatedDate = value;
                    this.SendPropertyChanged("UpdatedDate");
                    this.OnUpdatedDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExDate", DbType = "Date")]
        public System.Nullable<System.DateTime> ExDate
        {
            get
            {
                return this._ExDate;
            }

            set
            {
                if ((this._ExDate != value))
                {
                    this.OnExDateChanging(value);
                    this.SendPropertyChanging();
                    this._ExDate = value;
                    this.SendPropertyChanged("ExDate");
                    this.OnExDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PayDate", DbType = "Date")]
        public System.Nullable<System.DateTime> PayDate
        {
            get
            {
                return this._PayDate;
            }

            set
            {
                if ((this._PayDate != value))
                {
                    this.OnPayDateChanging(value);
                    this.SendPropertyChanging();
                    this._PayDate = value;
                    this.SendPropertyChanged("PayDate");
                    this.OnPayDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPGainLoss", DbType = "Decimal(32,2)")]
        public System.Nullable<decimal> DPGainLoss
        {
            get
            {
                return this._DPGainLoss;
            }

            set
            {
                if ((this._DPGainLoss != value))
                {
                    this.OnDPGainLossChanging(value);
                    this.SendPropertyChanging();
                    this._DPGainLoss = value;
                    this.SendPropertyChanged("DPGainLoss");
                    this.OnDPGainLossChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RecallableDistPct", DbType = "Decimal(9,6)")]
        public System.Nullable<decimal> RecallableDistPct
        {
            get
            {
                return this._RecallableDistPct;
            }

            set
            {
                if ((this._RecallableDistPct != value))
                {
                    this.OnRecallableDistPctChanging(value);
                    this.SendPropertyChanging();
                    this._RecallableDistPct = value;
                    this.SendPropertyChanged("RecallableDistPct");
                    this.OnRecallableDistPctChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RecallableExpDate", DbType = "Date")]
        public System.Nullable<System.DateTime> RecallableExpDate
        {
            get
            {
                return this._RecallableExpDate;
            }

            set
            {
                if ((this._RecallableExpDate != value))
                {
                    this.OnRecallableExpDateChanging(value);
                    this.SendPropertyChanging();
                    this._RecallableExpDate = value;
                    this.SendPropertyChanged("RecallableExpDate");
                    this.OnRecallableExpDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Final", DbType = "Bit")]
        public System.Nullable<bool> Final
        {
            get
            {
                return this._Final;
            }

            set
            {
                if ((this._Final != value))
                {
                    this.OnFinalChanging(value);
                    this.SendPropertyChanging();
                    this._Final = value;
                    this.SendPropertyChanged("Final");
                    this.OnFinalChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPID", DbType = "Int")]
        public System.Nullable<int> DPID
        {
            get
            {
                return this._DPID;
            }

            set
            {
                if ((this._DPID != value))
                {
                    this.OnDPIDChanging(value);
                    this.SendPropertyChanging();
                    this._DPID = value;
                    this.SendPropertyChanged("DPID");
                    this.OnDPIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserID", DbType = "Int")]
        public System.Nullable<int> UserID
        {
            get
            {
                return this._UserID;
            }

            set
            {
                if ((this._UserID != value))
                {
                    this.OnUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoadDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> LoadDateTime
        {
            get
            {
                return this._LoadDateTime;
            }

            set
            {
                if ((this._LoadDateTime != value))
                {
                    this.OnLoadDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._LoadDateTime = value;
                    this.SendPropertyChanged("LoadDateTime");
                    this.OnLoadDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Stat", DbType = "VarChar(1)")]
        public string Stat
        {
            get
            {
                return this._Stat;
            }

            set
            {
                if ((this._Stat != value))
                {
                    this.OnStatChanging(value);
                    this.SendPropertyChanging();
                    this._Stat = value;
                    this.SendPropertyChanged("Stat");
                    this.OnStatChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RetiredDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> RetiredDateTime
        {
            get
            {
                return this._RetiredDateTime;
            }

            set
            {
                if ((this._RetiredDateTime != value))
                {
                    this.OnRetiredDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._RetiredDateTime = value;
                    this.SendPropertyChanged("RetiredDateTime");
                    this.OnRetiredDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoadSourceID", DbType = "Int")]
        public System.Nullable<int> LoadSourceID
        {
            get
            {
                return this._LoadSourceID;
            }

            set
            {
                if ((this._LoadSourceID != value))
                {
                    this.OnLoadSourceIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoadSourceID = value;
                    this.SendPropertyChanged("LoadSourceID");
                    this.OnLoadSourceIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TmpTransUniqueKeyID", DbType = "VarChar(50)")]
        public string TmpTransUniqueKeyID
        {
            get
            {
                return this._TmpTransUniqueKeyID;
            }

            set
            {
                if ((this._TmpTransUniqueKeyID != value))
                {
                    this.OnTmpTransUniqueKeyIDChanging(value);
                    this.SendPropertyChanging();
                    this._TmpTransUniqueKeyID = value;
                    this.SendPropertyChanged("TmpTransUniqueKeyID");
                    this.OnTmpTransUniqueKeyIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OriginalTransID", DbType = "Int")]
        public System.Nullable<int> OriginalTransID
        {
            get
            {
                return this._OriginalTransID;
            }

            set
            {
                if ((this._OriginalTransID != value))
                {
                    this.OnOriginalTransIDChanging(value);
                    this.SendPropertyChanging();
                    this._OriginalTransID = value;
                    this.SendPropertyChanged("OriginalTransID");
                    this.OnOriginalTransIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_EditUserID", DbType = "Int")]
        public System.Nullable<int> EditUserID
        {
            get
            {
                return this._EditUserID;
            }

            set
            {
                if ((this._EditUserID != value))
                {
                    this.OnEditUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._EditUserID = value;
                    this.SendPropertyChanged("EditUserID");
                    this.OnEditUserIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransTypeID", DbType = "Int")]
        public System.Nullable<int> TransTypeID
        {
            get
            {
                return this._TransTypeID;
            }

            set
            {
                if ((this._TransTypeID != value))
                {
                    this.OnTransTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TransTypeID = value;
                    this.SendPropertyChanged("TransTypeID");
                    this.OnTransTypeIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TransSubTypeID", DbType = "Int")]
        public System.Nullable<int> TransSubTypeID
        {
            get
            {
                return this._TransSubTypeID;
            }

            set
            {
                if ((this._TransSubTypeID != value))
                {
                    this.OnTransSubTypeIDChanging(value);
                    this.SendPropertyChanging();
                    this._TransSubTypeID = value;
                    this.SendPropertyChanged("TransSubTypeID");
                    this.OnTransSubTypeIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LinkAcctID", DbType = "Int")]
        public System.Nullable<int> LinkAcctID
        {
            get
            {
                return this._LinkAcctID;
            }

            set
            {
                if ((this._LinkAcctID != value))
                {
                    this.OnLinkAcctIDChanging(value);
                    this.SendPropertyChanging();
                    this._LinkAcctID = value;
                    this.SendPropertyChanged("LinkAcctID");
                    this.OnLinkAcctIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LinkSubAcctID", DbType = "Int")]
        public System.Nullable<int> LinkSubAcctID
        {
            get
            {
                return this._LinkSubAcctID;
            }

            set
            {
                if ((this._LinkSubAcctID != value))
                {
                    this.OnLinkSubAcctIDChanging(value);
                    this.SendPropertyChanging();
                    this._LinkSubAcctID = value;
                    this.SendPropertyChanged("LinkSubAcctID");
                    this.OnLinkSubAcctIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecEntAllocID", DbType = "Int")]
        public System.Nullable<int> SecEntAllocID
        {
            get
            {
                return this._SecEntAllocID;
            }

            set
            {
                if ((this._SecEntAllocID != value))
                {
                    this.OnSecEntAllocIDChanging(value);
                    this.SendPropertyChanging();
                    this._SecEntAllocID = value;
                    this.SendPropertyChanged("SecEntAllocID");
                    this.OnSecEntAllocIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserDefined1", DbType = "VarChar(255)")]
        public string UserDefined1
        {
            get
            {
                return this._UserDefined1;
            }

            set
            {
                if ((this._UserDefined1 != value))
                {
                    this.OnUserDefined1Changing(value);
                    this.SendPropertyChanging();
                    this._UserDefined1 = value;
                    this.SendPropertyChanged("UserDefined1");
                    this.OnUserDefined1Changed();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserDefined2", DbType = "VarChar(255)")]
        public string UserDefined2
        {
            get
            {
                return this._UserDefined2;
            }

            set
            {
                if ((this._UserDefined2 != value))
                {
                    this.OnUserDefined2Changing(value);
                    this.SendPropertyChanging();
                    this._UserDefined2 = value;
                    this.SendPropertyChanged("UserDefined2");
                    this.OnUserDefined2Changed();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "cashpro.ErrorLog")]
    public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _ErrorLog_ID;
        private string _inputJSON;
        private string _errorJSON;
        private System.DateTime _Load_DateTime;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnErrorLog_IDChanging(int value);
        partial void OnErrorLog_IDChanged();
        partial void OninputJSONChanging(string value);
        partial void OninputJSONChanged();
        partial void OnerrorJSONChanging(string value);
        partial void OnerrorJSONChanged();
        partial void OnLoad_DateTimeChanging(System.DateTime value);
        partial void OnLoad_DateTimeChanged();
#endregion
        public ErrorLog()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ErrorLog_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ErrorLog_ID
        {
            get
            {
                return this._ErrorLog_ID;
            }

            set
            {
                if ((this._ErrorLog_ID != value))
                {
                    this.OnErrorLog_IDChanging(value);
                    this.SendPropertyChanging();
                    this._ErrorLog_ID = value;
                    this.SendPropertyChanged("ErrorLog_ID");
                    this.OnErrorLog_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_inputJSON", DbType = "VarChar(MAX)")]
        public string inputJSON
        {
            get
            {
                return this._inputJSON;
            }

            set
            {
                if ((this._inputJSON != value))
                {
                    this.OninputJSONChanging(value);
                    this.SendPropertyChanging();
                    this._inputJSON = value;
                    this.SendPropertyChanged("inputJSON");
                    this.OninputJSONChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_errorJSON", DbType = "VarChar(MAX)")]
        public string errorJSON
        {
            get
            {
                return this._errorJSON;
            }

            set
            {
                if ((this._errorJSON != value))
                {
                    this.OnerrorJSONChanging(value);
                    this.SendPropertyChanging();
                    this._errorJSON = value;
                    this.SendPropertyChanged("errorJSON");
                    this.OnerrorJSONChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Load_DateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime Load_DateTime
        {
            get
            {
                return this._Load_DateTime;
            }

            set
            {
                if ((this._Load_DateTime != value))
                {
                    this.OnLoad_DateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._Load_DateTime = value;
                    this.SendPropertyChanged("Load_DateTime");
                    this.OnLoad_DateTimeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "cashpro.Processes")]
    public partial class CashProProcess : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _Processes_ID;
        private string _ProcessName;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnProcesses_IDChanging(int value);
        partial void OnProcesses_IDChanged();
        partial void OnProcessNameChanging(string value);
        partial void OnProcessNameChanged();
#endregion
        public CashProProcess()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Processes_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Processes_ID
        {
            get
            {
                return this._Processes_ID;
            }

            set
            {
                if ((this._Processes_ID != value))
                {
                    this.OnProcesses_IDChanging(value);
                    this.SendPropertyChanging();
                    this._Processes_ID = value;
                    this.SendPropertyChanged("Processes_ID");
                    this.OnProcesses_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProcessName", DbType = "VarChar(100) NOT NULL", CanBeNull = false)]
        public string ProcessName
        {
            get
            {
                return this._ProcessName;
            }

            set
            {
                if ((this._ProcessName != value))
                {
                    this.OnProcessNameChanging(value);
                    this.SendPropertyChanging();
                    this._ProcessName = value;
                    this.SendPropertyChanged("ProcessName");
                    this.OnProcessNameChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "cashpro.ProcessHistory")]
    public partial class CashProProcessHistory : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _ProcessHistory_ID;
        private System.DateTime _RunDateTime;
        private string _Error;
        private System.Nullable<int> _Process_ID;
        private System.Nullable<System.DateTime> _UpdateDateTime;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnProcessHistory_IDChanging(int value);
        partial void OnProcessHistory_IDChanged();
        partial void OnRunDateTimeChanging(System.DateTime value);
        partial void OnRunDateTimeChanged();
        partial void OnErrorChanging(string value);
        partial void OnErrorChanged();
        partial void OnProcess_IDChanging(System.Nullable<int> value);
        partial void OnProcess_IDChanged();
        partial void OnUpdateDateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnUpdateDateTimeChanged();
#endregion
        public CashProProcessHistory()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ProcessHistory_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int ProcessHistory_ID
        {
            get
            {
                return this._ProcessHistory_ID;
            }

            set
            {
                if ((this._ProcessHistory_ID != value))
                {
                    this.OnProcessHistory_IDChanging(value);
                    this.SendPropertyChanging();
                    this._ProcessHistory_ID = value;
                    this.SendPropertyChanged("ProcessHistory_ID");
                    this.OnProcessHistory_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RunDateTime", DbType = "DateTime NOT NULL")]
        public System.DateTime RunDateTime
        {
            get
            {
                return this._RunDateTime;
            }

            set
            {
                if ((this._RunDateTime != value))
                {
                    this.OnRunDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._RunDateTime = value;
                    this.SendPropertyChanged("RunDateTime");
                    this.OnRunDateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Error", DbType = "VarChar(MAX)")]
        public string Error
        {
            get
            {
                return this._Error;
            }

            set
            {
                if ((this._Error != value))
                {
                    this.OnErrorChanging(value);
                    this.SendPropertyChanging();
                    this._Error = value;
                    this.SendPropertyChanged("Error");
                    this.OnErrorChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Process_ID", DbType = "Int")]
        public System.Nullable<int> Process_ID
        {
            get
            {
                return this._Process_ID;
            }

            set
            {
                if ((this._Process_ID != value))
                {
                    this.OnProcess_IDChanging(value);
                    this.SendPropertyChanging();
                    this._Process_ID = value;
                    this.SendPropertyChanged("Process_ID");
                    this.OnProcess_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UpdateDateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> UpdateDateTime
        {
            get
            {
                return this._UpdateDateTime;
            }

            set
            {
                if ((this._UpdateDateTime != value))
                {
                    this.OnUpdateDateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._UpdateDateTime = value;
                    this.SendPropertyChanged("UpdateDateTime");
                    this.OnUpdateDateTimeChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "tr.Load_TermsAndConditions")]
    public partial class Load_TermsAndCondition : INotifyPropertyChanging, INotifyPropertyChanged
    {
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
        private int _Load_TermsAndConditions_ID;
        private string _Identifier;
        private string _IdentifierType;
        private System.Nullable<int> _LoadSourceID;
        private System.Nullable<int> _DPID;
        private System.Nullable<int> _UserID;
        private string _CUSIP;
        private string _ISIN;
        private string _Ticker;
        private string _RIC;
        private string _SEDOL;
        private string _Valoren;
        private string _PrincCCYID;
        private string _AssetType;
        private string _AssetTypeDescription;
        private string _AssetSubType;
        private string _AssetSubTypeDescription;
        private string _DayCountCode;
        private string _DayCountCodeDescription;
        private string _IssueDate;
        private string _IssuePrice;
        private string _AccrualDate;
        private string _MaturityDate;
        private string _LastCouponDate;
        private string _FirstCouponDate;
        private string _CouponRate;
        private string _CouponType;
        private string _CouponTypeDescription;
        private string _CouponFrequency;
        private string _CouponFrequencyDescription;
        private string _CouponCurrency;
        private string _OriginalIssueDiscountFlag;
        private string _DenominationIncrement;
        private string _NextCallDate;
        private string _NextCallPrice;
        private string _ISOCountryCode;
        private string _StateCode;
        private string _MoodysRating;
        private string _IndustryDescription;
        private string _IndustrySectorDescription;
        private string _TRBCEconomicSectorCode;
        private string _TRBCEconomicSectorCodeDescription;
        private string _TRBCIndustryCode;
        private string _TRBCIndustryCodeDescription;
        private string _HybridFlag;
        private string _ParValue;
        private string _SecurityDescription;
        private string _CurrencyCode;
        private string _CurrencyCodeDescription;
        private string _DividendCurrency;
        private string _DividendCurrencyDescription;
        private string _InvestmentType;
        private string _ExchangeCode;
        private string _ExchangeDescription;
        private string _Domicile;
        private string _IssuerName;
        private string _IssuerOrgID;
        private string _ETFType;
        private string _ConvertibleFlag;
        private string _FloatIndexType;
        private string _CouponResetFrequency;
        private string _CouponResetFrequencyDescription;
        private string _CouponResetRuleCode;
        private string _CouponResetRuleCodeDescription;
        private string _PreviousCouponDate;
        private string _SharesAmountType;
        private string _SharesAmount;
        private string _RefinitivClassificationScheme;
        private string _RefinitivClassificationSchemeDescription;
        private string _GeographicalFocus;
        private string _LipperGlobalClassification;
        private string _FundManagerBenchmark;
        private string _UserDefinedIdentifier;
        private System.Nullable<System.DateTime> _Load_DateTime;
        private System.Data.Linq.Binary _RawCheckSum;
#region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnLoad_TermsAndConditions_IDChanging(int value);
        partial void OnLoad_TermsAndConditions_IDChanged();
        partial void OnIdentifierChanging(string value);
        partial void OnIdentifierChanged();
        partial void OnIdentifierTypeChanging(string value);
        partial void OnIdentifierTypeChanged();
        partial void OnLoadSourceIDChanging(System.Nullable<int> value);
        partial void OnLoadSourceIDChanged();
        partial void OnDPIDChanging(System.Nullable<int> value);
        partial void OnDPIDChanged();
        partial void OnUserIDChanging(System.Nullable<int> value);
        partial void OnUserIDChanged();
        partial void OnCUSIPChanging(string value);
        partial void OnCUSIPChanged();
        partial void OnISINChanging(string value);
        partial void OnISINChanged();
        partial void OnTickerChanging(string value);
        partial void OnTickerChanged();
        partial void OnRICChanging(string value);
        partial void OnRICChanged();
        partial void OnSEDOLChanging(string value);
        partial void OnSEDOLChanged();
        partial void OnValorenChanging(string value);
        partial void OnValorenChanged();
        partial void OnPrincCCYIDChanging(string value);
        partial void OnPrincCCYIDChanged();
        partial void OnAssetTypeChanging(string value);
        partial void OnAssetTypeChanged();
        partial void OnAssetTypeDescriptionChanging(string value);
        partial void OnAssetTypeDescriptionChanged();
        partial void OnAssetSubTypeChanging(string value);
        partial void OnAssetSubTypeChanged();
        partial void OnAssetSubTypeDescriptionChanging(string value);
        partial void OnAssetSubTypeDescriptionChanged();
        partial void OnDayCountCodeChanging(string value);
        partial void OnDayCountCodeChanged();
        partial void OnDayCountCodeDescriptionChanging(string value);
        partial void OnDayCountCodeDescriptionChanged();
        partial void OnIssueDateChanging(string value);
        partial void OnIssueDateChanged();
        partial void OnIssuePriceChanging(string value);
        partial void OnIssuePriceChanged();
        partial void OnAccrualDateChanging(string value);
        partial void OnAccrualDateChanged();
        partial void OnMaturityDateChanging(string value);
        partial void OnMaturityDateChanged();
        partial void OnLastCouponDateChanging(string value);
        partial void OnLastCouponDateChanged();
        partial void OnFirstCouponDateChanging(string value);
        partial void OnFirstCouponDateChanged();
        partial void OnCouponRateChanging(string value);
        partial void OnCouponRateChanged();
        partial void OnCouponTypeChanging(string value);
        partial void OnCouponTypeChanged();
        partial void OnCouponTypeDescriptionChanging(string value);
        partial void OnCouponTypeDescriptionChanged();
        partial void OnCouponFrequencyChanging(string value);
        partial void OnCouponFrequencyChanged();
        partial void OnCouponFrequencyDescriptionChanging(string value);
        partial void OnCouponFrequencyDescriptionChanged();
        partial void OnCouponCurrencyChanging(string value);
        partial void OnCouponCurrencyChanged();
        partial void OnOriginalIssueDiscountFlagChanging(string value);
        partial void OnOriginalIssueDiscountFlagChanged();
        partial void OnDenominationIncrementChanging(string value);
        partial void OnDenominationIncrementChanged();
        partial void OnNextCallDateChanging(string value);
        partial void OnNextCallDateChanged();
        partial void OnNextCallPriceChanging(string value);
        partial void OnNextCallPriceChanged();
        partial void OnISOCountryCodeChanging(string value);
        partial void OnISOCountryCodeChanged();
        partial void OnStateCodeChanging(string value);
        partial void OnStateCodeChanged();
        partial void OnMoodysRatingChanging(string value);
        partial void OnMoodysRatingChanged();
        partial void OnIndustryDescriptionChanging(string value);
        partial void OnIndustryDescriptionChanged();
        partial void OnIndustrySectorDescriptionChanging(string value);
        partial void OnIndustrySectorDescriptionChanged();
        partial void OnTRBCEconomicSectorCodeChanging(string value);
        partial void OnTRBCEconomicSectorCodeChanged();
        partial void OnTRBCEconomicSectorCodeDescriptionChanging(string value);
        partial void OnTRBCEconomicSectorCodeDescriptionChanged();
        partial void OnTRBCIndustryCodeChanging(string value);
        partial void OnTRBCIndustryCodeChanged();
        partial void OnTRBCIndustryCodeDescriptionChanging(string value);
        partial void OnTRBCIndustryCodeDescriptionChanged();
        partial void OnHybridFlagChanging(string value);
        partial void OnHybridFlagChanged();
        partial void OnParValueChanging(string value);
        partial void OnParValueChanged();
        partial void OnSecurityDescriptionChanging(string value);
        partial void OnSecurityDescriptionChanged();
        partial void OnCurrencyCodeChanging(string value);
        partial void OnCurrencyCodeChanged();
        partial void OnCurrencyCodeDescriptionChanging(string value);
        partial void OnCurrencyCodeDescriptionChanged();
        partial void OnDividendCurrencyChanging(string value);
        partial void OnDividendCurrencyChanged();
        partial void OnDividendCurrencyDescriptionChanging(string value);
        partial void OnDividendCurrencyDescriptionChanged();
        partial void OnInvestmentTypeChanging(string value);
        partial void OnInvestmentTypeChanged();
        partial void OnExchangeCodeChanging(string value);
        partial void OnExchangeCodeChanged();
        partial void OnExchangeDescriptionChanging(string value);
        partial void OnExchangeDescriptionChanged();
        partial void OnDomicileChanging(string value);
        partial void OnDomicileChanged();
        partial void OnIssuerNameChanging(string value);
        partial void OnIssuerNameChanged();
        partial void OnIssuerOrgIDChanging(string value);
        partial void OnIssuerOrgIDChanged();
        partial void OnETFTypeChanging(string value);
        partial void OnETFTypeChanged();
        partial void OnConvertibleFlagChanging(string value);
        partial void OnConvertibleFlagChanged();
        partial void OnFloatIndexTypeChanging(string value);
        partial void OnFloatIndexTypeChanged();
        partial void OnCouponResetFrequencyChanging(string value);
        partial void OnCouponResetFrequencyChanged();
        partial void OnCouponResetFrequencyDescriptionChanging(string value);
        partial void OnCouponResetFrequencyDescriptionChanged();
        partial void OnCouponResetRuleCodeChanging(string value);
        partial void OnCouponResetRuleCodeChanged();
        partial void OnCouponResetRuleCodeDescriptionChanging(string value);
        partial void OnCouponResetRuleCodeDescriptionChanged();
        partial void OnPreviousCouponDateChanging(string value);
        partial void OnPreviousCouponDateChanged();
        partial void OnSharesAmountTypeChanging(string value);
        partial void OnSharesAmountTypeChanged();
        partial void OnSharesAmountChanging(string value);
        partial void OnSharesAmountChanged();
        partial void OnRefinitivClassificationSchemeChanging(string value);
        partial void OnRefinitivClassificationSchemeChanged();
        partial void OnRefinitivClassificationSchemeDescriptionChanging(string value);
        partial void OnRefinitivClassificationSchemeDescriptionChanged();
        partial void OnGeographicalFocusChanging(string value);
        partial void OnGeographicalFocusChanged();
        partial void OnLipperGlobalClassificationChanging(string value);
        partial void OnLipperGlobalClassificationChanged();
        partial void OnFundManagerBenchmarkChanging(string value);
        partial void OnFundManagerBenchmarkChanged();
        partial void OnUserDefinedIdentifierChanging(string value);
        partial void OnUserDefinedIdentifierChanged();
        partial void OnLoad_DateTimeChanging(System.Nullable<System.DateTime> value);
        partial void OnLoad_DateTimeChanged();
        partial void OnRawCheckSumChanging(System.Data.Linq.Binary value);
        partial void OnRawCheckSumChanged();
#endregion
        public Load_TermsAndCondition()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Load_TermsAndConditions_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int Load_TermsAndConditions_ID
        {
            get
            {
                return this._Load_TermsAndConditions_ID;
            }

            set
            {
                if ((this._Load_TermsAndConditions_ID != value))
                {
                    this.OnLoad_TermsAndConditions_IDChanging(value);
                    this.SendPropertyChanging();
                    this._Load_TermsAndConditions_ID = value;
                    this.SendPropertyChanged("Load_TermsAndConditions_ID");
                    this.OnLoad_TermsAndConditions_IDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Identifier", DbType = "VarChar(1000)")]
        public string Identifier
        {
            get
            {
                return this._Identifier;
            }

            set
            {
                if ((this._Identifier != value))
                {
                    this.OnIdentifierChanging(value);
                    this.SendPropertyChanging();
                    this._Identifier = value;
                    this.SendPropertyChanged("Identifier");
                    this.OnIdentifierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IdentifierType", DbType = "VarChar(1000)")]
        public string IdentifierType
        {
            get
            {
                return this._IdentifierType;
            }

            set
            {
                if ((this._IdentifierType != value))
                {
                    this.OnIdentifierTypeChanging(value);
                    this.SendPropertyChanging();
                    this._IdentifierType = value;
                    this.SendPropertyChanged("IdentifierType");
                    this.OnIdentifierTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LoadSourceID", DbType = "Int")]
        public System.Nullable<int> LoadSourceID
        {
            get
            {
                return this._LoadSourceID;
            }

            set
            {
                if ((this._LoadSourceID != value))
                {
                    this.OnLoadSourceIDChanging(value);
                    this.SendPropertyChanging();
                    this._LoadSourceID = value;
                    this.SendPropertyChanged("LoadSourceID");
                    this.OnLoadSourceIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DPID", DbType = "Int")]
        public System.Nullable<int> DPID
        {
            get
            {
                return this._DPID;
            }

            set
            {
                if ((this._DPID != value))
                {
                    this.OnDPIDChanging(value);
                    this.SendPropertyChanging();
                    this._DPID = value;
                    this.SendPropertyChanged("DPID");
                    this.OnDPIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserID", DbType = "Int")]
        public System.Nullable<int> UserID
        {
            get
            {
                return this._UserID;
            }

            set
            {
                if ((this._UserID != value))
                {
                    this.OnUserIDChanging(value);
                    this.SendPropertyChanging();
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                    this.OnUserIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CUSIP", DbType = "VarChar(1000)")]
        public string CUSIP
        {
            get
            {
                return this._CUSIP;
            }

            set
            {
                if ((this._CUSIP != value))
                {
                    this.OnCUSIPChanging(value);
                    this.SendPropertyChanging();
                    this._CUSIP = value;
                    this.SendPropertyChanged("CUSIP");
                    this.OnCUSIPChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ISIN", DbType = "VarChar(1000)")]
        public string ISIN
        {
            get
            {
                return this._ISIN;
            }

            set
            {
                if ((this._ISIN != value))
                {
                    this.OnISINChanging(value);
                    this.SendPropertyChanging();
                    this._ISIN = value;
                    this.SendPropertyChanged("ISIN");
                    this.OnISINChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Ticker", DbType = "VarChar(1000)")]
        public string Ticker
        {
            get
            {
                return this._Ticker;
            }

            set
            {
                if ((this._Ticker != value))
                {
                    this.OnTickerChanging(value);
                    this.SendPropertyChanging();
                    this._Ticker = value;
                    this.SendPropertyChanged("Ticker");
                    this.OnTickerChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RIC", DbType = "VarChar(1000)")]
        public string RIC
        {
            get
            {
                return this._RIC;
            }

            set
            {
                if ((this._RIC != value))
                {
                    this.OnRICChanging(value);
                    this.SendPropertyChanging();
                    this._RIC = value;
                    this.SendPropertyChanged("RIC");
                    this.OnRICChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SEDOL", DbType = "VarChar(1000)")]
        public string SEDOL
        {
            get
            {
                return this._SEDOL;
            }

            set
            {
                if ((this._SEDOL != value))
                {
                    this.OnSEDOLChanging(value);
                    this.SendPropertyChanging();
                    this._SEDOL = value;
                    this.SendPropertyChanged("SEDOL");
                    this.OnSEDOLChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Valoren", DbType = "VarChar(1000)")]
        public string Valoren
        {
            get
            {
                return this._Valoren;
            }

            set
            {
                if ((this._Valoren != value))
                {
                    this.OnValorenChanging(value);
                    this.SendPropertyChanging();
                    this._Valoren = value;
                    this.SendPropertyChanged("Valoren");
                    this.OnValorenChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PrincCCYID", DbType = "VarChar(1000)")]
        public string PrincCCYID
        {
            get
            {
                return this._PrincCCYID;
            }

            set
            {
                if ((this._PrincCCYID != value))
                {
                    this.OnPrincCCYIDChanging(value);
                    this.SendPropertyChanging();
                    this._PrincCCYID = value;
                    this.SendPropertyChanged("PrincCCYID");
                    this.OnPrincCCYIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AssetType", DbType = "VarChar(1000)")]
        public string AssetType
        {
            get
            {
                return this._AssetType;
            }

            set
            {
                if ((this._AssetType != value))
                {
                    this.OnAssetTypeChanging(value);
                    this.SendPropertyChanging();
                    this._AssetType = value;
                    this.SendPropertyChanged("AssetType");
                    this.OnAssetTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AssetTypeDescription", DbType = "VarChar(1000)")]
        public string AssetTypeDescription
        {
            get
            {
                return this._AssetTypeDescription;
            }

            set
            {
                if ((this._AssetTypeDescription != value))
                {
                    this.OnAssetTypeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._AssetTypeDescription = value;
                    this.SendPropertyChanged("AssetTypeDescription");
                    this.OnAssetTypeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AssetSubType", DbType = "VarChar(1000)")]
        public string AssetSubType
        {
            get
            {
                return this._AssetSubType;
            }

            set
            {
                if ((this._AssetSubType != value))
                {
                    this.OnAssetSubTypeChanging(value);
                    this.SendPropertyChanging();
                    this._AssetSubType = value;
                    this.SendPropertyChanged("AssetSubType");
                    this.OnAssetSubTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AssetSubTypeDescription", DbType = "VarChar(1000)")]
        public string AssetSubTypeDescription
        {
            get
            {
                return this._AssetSubTypeDescription;
            }

            set
            {
                if ((this._AssetSubTypeDescription != value))
                {
                    this.OnAssetSubTypeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._AssetSubTypeDescription = value;
                    this.SendPropertyChanged("AssetSubTypeDescription");
                    this.OnAssetSubTypeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayCountCode", DbType = "VarChar(1000)")]
        public string DayCountCode
        {
            get
            {
                return this._DayCountCode;
            }

            set
            {
                if ((this._DayCountCode != value))
                {
                    this.OnDayCountCodeChanging(value);
                    this.SendPropertyChanging();
                    this._DayCountCode = value;
                    this.SendPropertyChanged("DayCountCode");
                    this.OnDayCountCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DayCountCodeDescription", DbType = "VarChar(1000)")]
        public string DayCountCodeDescription
        {
            get
            {
                return this._DayCountCodeDescription;
            }

            set
            {
                if ((this._DayCountCodeDescription != value))
                {
                    this.OnDayCountCodeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DayCountCodeDescription = value;
                    this.SendPropertyChanged("DayCountCodeDescription");
                    this.OnDayCountCodeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IssueDate", DbType = "VarChar(1000)")]
        public string IssueDate
        {
            get
            {
                return this._IssueDate;
            }

            set
            {
                if ((this._IssueDate != value))
                {
                    this.OnIssueDateChanging(value);
                    this.SendPropertyChanging();
                    this._IssueDate = value;
                    this.SendPropertyChanged("IssueDate");
                    this.OnIssueDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IssuePrice", DbType = "VarChar(1000)")]
        public string IssuePrice
        {
            get
            {
                return this._IssuePrice;
            }

            set
            {
                if ((this._IssuePrice != value))
                {
                    this.OnIssuePriceChanging(value);
                    this.SendPropertyChanging();
                    this._IssuePrice = value;
                    this.SendPropertyChanged("IssuePrice");
                    this.OnIssuePriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AccrualDate", DbType = "VarChar(1000)")]
        public string AccrualDate
        {
            get
            {
                return this._AccrualDate;
            }

            set
            {
                if ((this._AccrualDate != value))
                {
                    this.OnAccrualDateChanging(value);
                    this.SendPropertyChanging();
                    this._AccrualDate = value;
                    this.SendPropertyChanged("AccrualDate");
                    this.OnAccrualDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MaturityDate", DbType = "VarChar(1000)")]
        public string MaturityDate
        {
            get
            {
                return this._MaturityDate;
            }

            set
            {
                if ((this._MaturityDate != value))
                {
                    this.OnMaturityDateChanging(value);
                    this.SendPropertyChanging();
                    this._MaturityDate = value;
                    this.SendPropertyChanged("MaturityDate");
                    this.OnMaturityDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastCouponDate", DbType = "VarChar(1000)")]
        public string LastCouponDate
        {
            get
            {
                return this._LastCouponDate;
            }

            set
            {
                if ((this._LastCouponDate != value))
                {
                    this.OnLastCouponDateChanging(value);
                    this.SendPropertyChanging();
                    this._LastCouponDate = value;
                    this.SendPropertyChanged("LastCouponDate");
                    this.OnLastCouponDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FirstCouponDate", DbType = "VarChar(1000)")]
        public string FirstCouponDate
        {
            get
            {
                return this._FirstCouponDate;
            }

            set
            {
                if ((this._FirstCouponDate != value))
                {
                    this.OnFirstCouponDateChanging(value);
                    this.SendPropertyChanging();
                    this._FirstCouponDate = value;
                    this.SendPropertyChanged("FirstCouponDate");
                    this.OnFirstCouponDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponRate", DbType = "VarChar(1000)")]
        public string CouponRate
        {
            get
            {
                return this._CouponRate;
            }

            set
            {
                if ((this._CouponRate != value))
                {
                    this.OnCouponRateChanging(value);
                    this.SendPropertyChanging();
                    this._CouponRate = value;
                    this.SendPropertyChanged("CouponRate");
                    this.OnCouponRateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponType", DbType = "VarChar(1000)")]
        public string CouponType
        {
            get
            {
                return this._CouponType;
            }

            set
            {
                if ((this._CouponType != value))
                {
                    this.OnCouponTypeChanging(value);
                    this.SendPropertyChanging();
                    this._CouponType = value;
                    this.SendPropertyChanged("CouponType");
                    this.OnCouponTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponTypeDescription", DbType = "VarChar(1000)")]
        public string CouponTypeDescription
        {
            get
            {
                return this._CouponTypeDescription;
            }

            set
            {
                if ((this._CouponTypeDescription != value))
                {
                    this.OnCouponTypeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._CouponTypeDescription = value;
                    this.SendPropertyChanged("CouponTypeDescription");
                    this.OnCouponTypeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponFrequency", DbType = "VarChar(1000)")]
        public string CouponFrequency
        {
            get
            {
                return this._CouponFrequency;
            }

            set
            {
                if ((this._CouponFrequency != value))
                {
                    this.OnCouponFrequencyChanging(value);
                    this.SendPropertyChanging();
                    this._CouponFrequency = value;
                    this.SendPropertyChanged("CouponFrequency");
                    this.OnCouponFrequencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponFrequencyDescription", DbType = "VarChar(1000)")]
        public string CouponFrequencyDescription
        {
            get
            {
                return this._CouponFrequencyDescription;
            }

            set
            {
                if ((this._CouponFrequencyDescription != value))
                {
                    this.OnCouponFrequencyDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._CouponFrequencyDescription = value;
                    this.SendPropertyChanged("CouponFrequencyDescription");
                    this.OnCouponFrequencyDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponCurrency", DbType = "VarChar(1000)")]
        public string CouponCurrency
        {
            get
            {
                return this._CouponCurrency;
            }

            set
            {
                if ((this._CouponCurrency != value))
                {
                    this.OnCouponCurrencyChanging(value);
                    this.SendPropertyChanging();
                    this._CouponCurrency = value;
                    this.SendPropertyChanged("CouponCurrency");
                    this.OnCouponCurrencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_OriginalIssueDiscountFlag", DbType = "VarChar(1000)")]
        public string OriginalIssueDiscountFlag
        {
            get
            {
                return this._OriginalIssueDiscountFlag;
            }

            set
            {
                if ((this._OriginalIssueDiscountFlag != value))
                {
                    this.OnOriginalIssueDiscountFlagChanging(value);
                    this.SendPropertyChanging();
                    this._OriginalIssueDiscountFlag = value;
                    this.SendPropertyChanged("OriginalIssueDiscountFlag");
                    this.OnOriginalIssueDiscountFlagChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DenominationIncrement", DbType = "VarChar(1000)")]
        public string DenominationIncrement
        {
            get
            {
                return this._DenominationIncrement;
            }

            set
            {
                if ((this._DenominationIncrement != value))
                {
                    this.OnDenominationIncrementChanging(value);
                    this.SendPropertyChanging();
                    this._DenominationIncrement = value;
                    this.SendPropertyChanged("DenominationIncrement");
                    this.OnDenominationIncrementChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NextCallDate", DbType = "VarChar(1000)")]
        public string NextCallDate
        {
            get
            {
                return this._NextCallDate;
            }

            set
            {
                if ((this._NextCallDate != value))
                {
                    this.OnNextCallDateChanging(value);
                    this.SendPropertyChanging();
                    this._NextCallDate = value;
                    this.SendPropertyChanged("NextCallDate");
                    this.OnNextCallDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_NextCallPrice", DbType = "VarChar(1000)")]
        public string NextCallPrice
        {
            get
            {
                return this._NextCallPrice;
            }

            set
            {
                if ((this._NextCallPrice != value))
                {
                    this.OnNextCallPriceChanging(value);
                    this.SendPropertyChanging();
                    this._NextCallPrice = value;
                    this.SendPropertyChanged("NextCallPrice");
                    this.OnNextCallPriceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ISOCountryCode", DbType = "VarChar(1000)")]
        public string ISOCountryCode
        {
            get
            {
                return this._ISOCountryCode;
            }

            set
            {
                if ((this._ISOCountryCode != value))
                {
                    this.OnISOCountryCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ISOCountryCode = value;
                    this.SendPropertyChanged("ISOCountryCode");
                    this.OnISOCountryCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StateCode", DbType = "VarChar(1000)")]
        public string StateCode
        {
            get
            {
                return this._StateCode;
            }

            set
            {
                if ((this._StateCode != value))
                {
                    this.OnStateCodeChanging(value);
                    this.SendPropertyChanging();
                    this._StateCode = value;
                    this.SendPropertyChanged("StateCode");
                    this.OnStateCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_MoodysRating", DbType = "VarChar(1000)")]
        public string MoodysRating
        {
            get
            {
                return this._MoodysRating;
            }

            set
            {
                if ((this._MoodysRating != value))
                {
                    this.OnMoodysRatingChanging(value);
                    this.SendPropertyChanging();
                    this._MoodysRating = value;
                    this.SendPropertyChanged("MoodysRating");
                    this.OnMoodysRatingChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IndustryDescription", DbType = "VarChar(1000)")]
        public string IndustryDescription
        {
            get
            {
                return this._IndustryDescription;
            }

            set
            {
                if ((this._IndustryDescription != value))
                {
                    this.OnIndustryDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._IndustryDescription = value;
                    this.SendPropertyChanged("IndustryDescription");
                    this.OnIndustryDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IndustrySectorDescription", DbType = "VarChar(1000)")]
        public string IndustrySectorDescription
        {
            get
            {
                return this._IndustrySectorDescription;
            }

            set
            {
                if ((this._IndustrySectorDescription != value))
                {
                    this.OnIndustrySectorDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._IndustrySectorDescription = value;
                    this.SendPropertyChanged("IndustrySectorDescription");
                    this.OnIndustrySectorDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TRBCEconomicSectorCode", DbType = "VarChar(1000)")]
        public string TRBCEconomicSectorCode
        {
            get
            {
                return this._TRBCEconomicSectorCode;
            }

            set
            {
                if ((this._TRBCEconomicSectorCode != value))
                {
                    this.OnTRBCEconomicSectorCodeChanging(value);
                    this.SendPropertyChanging();
                    this._TRBCEconomicSectorCode = value;
                    this.SendPropertyChanged("TRBCEconomicSectorCode");
                    this.OnTRBCEconomicSectorCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TRBCEconomicSectorCodeDescription", DbType = "VarChar(1000)")]
        public string TRBCEconomicSectorCodeDescription
        {
            get
            {
                return this._TRBCEconomicSectorCodeDescription;
            }

            set
            {
                if ((this._TRBCEconomicSectorCodeDescription != value))
                {
                    this.OnTRBCEconomicSectorCodeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._TRBCEconomicSectorCodeDescription = value;
                    this.SendPropertyChanged("TRBCEconomicSectorCodeDescription");
                    this.OnTRBCEconomicSectorCodeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TRBCIndustryCode", DbType = "VarChar(1000)")]
        public string TRBCIndustryCode
        {
            get
            {
                return this._TRBCIndustryCode;
            }

            set
            {
                if ((this._TRBCIndustryCode != value))
                {
                    this.OnTRBCIndustryCodeChanging(value);
                    this.SendPropertyChanging();
                    this._TRBCIndustryCode = value;
                    this.SendPropertyChanged("TRBCIndustryCode");
                    this.OnTRBCIndustryCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TRBCIndustryCodeDescription", DbType = "VarChar(1000)")]
        public string TRBCIndustryCodeDescription
        {
            get
            {
                return this._TRBCIndustryCodeDescription;
            }

            set
            {
                if ((this._TRBCIndustryCodeDescription != value))
                {
                    this.OnTRBCIndustryCodeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._TRBCIndustryCodeDescription = value;
                    this.SendPropertyChanged("TRBCIndustryCodeDescription");
                    this.OnTRBCIndustryCodeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_HybridFlag", DbType = "VarChar(1000)")]
        public string HybridFlag
        {
            get
            {
                return this._HybridFlag;
            }

            set
            {
                if ((this._HybridFlag != value))
                {
                    this.OnHybridFlagChanging(value);
                    this.SendPropertyChanging();
                    this._HybridFlag = value;
                    this.SendPropertyChanged("HybridFlag");
                    this.OnHybridFlagChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ParValue", DbType = "VarChar(1000)")]
        public string ParValue
        {
            get
            {
                return this._ParValue;
            }

            set
            {
                if ((this._ParValue != value))
                {
                    this.OnParValueChanging(value);
                    this.SendPropertyChanging();
                    this._ParValue = value;
                    this.SendPropertyChanged("ParValue");
                    this.OnParValueChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecurityDescription", DbType = "VarChar(1000)")]
        public string SecurityDescription
        {
            get
            {
                return this._SecurityDescription;
            }

            set
            {
                if ((this._SecurityDescription != value))
                {
                    this.OnSecurityDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._SecurityDescription = value;
                    this.SendPropertyChanged("SecurityDescription");
                    this.OnSecurityDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurrencyCode", DbType = "VarChar(1000)")]
        public string CurrencyCode
        {
            get
            {
                return this._CurrencyCode;
            }

            set
            {
                if ((this._CurrencyCode != value))
                {
                    this.OnCurrencyCodeChanging(value);
                    this.SendPropertyChanging();
                    this._CurrencyCode = value;
                    this.SendPropertyChanged("CurrencyCode");
                    this.OnCurrencyCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CurrencyCodeDescription", DbType = "VarChar(1000)")]
        public string CurrencyCodeDescription
        {
            get
            {
                return this._CurrencyCodeDescription;
            }

            set
            {
                if ((this._CurrencyCodeDescription != value))
                {
                    this.OnCurrencyCodeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._CurrencyCodeDescription = value;
                    this.SendPropertyChanged("CurrencyCodeDescription");
                    this.OnCurrencyCodeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendCurrency", DbType = "VarChar(1000)")]
        public string DividendCurrency
        {
            get
            {
                return this._DividendCurrency;
            }

            set
            {
                if ((this._DividendCurrency != value))
                {
                    this.OnDividendCurrencyChanging(value);
                    this.SendPropertyChanging();
                    this._DividendCurrency = value;
                    this.SendPropertyChanged("DividendCurrency");
                    this.OnDividendCurrencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DividendCurrencyDescription", DbType = "VarChar(1000)")]
        public string DividendCurrencyDescription
        {
            get
            {
                return this._DividendCurrencyDescription;
            }

            set
            {
                if ((this._DividendCurrencyDescription != value))
                {
                    this.OnDividendCurrencyDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._DividendCurrencyDescription = value;
                    this.SendPropertyChanged("DividendCurrencyDescription");
                    this.OnDividendCurrencyDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_InvestmentType", DbType = "VarChar(1000)")]
        public string InvestmentType
        {
            get
            {
                return this._InvestmentType;
            }

            set
            {
                if ((this._InvestmentType != value))
                {
                    this.OnInvestmentTypeChanging(value);
                    this.SendPropertyChanging();
                    this._InvestmentType = value;
                    this.SendPropertyChanged("InvestmentType");
                    this.OnInvestmentTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExchangeCode", DbType = "VarChar(1000)")]
        public string ExchangeCode
        {
            get
            {
                return this._ExchangeCode;
            }

            set
            {
                if ((this._ExchangeCode != value))
                {
                    this.OnExchangeCodeChanging(value);
                    this.SendPropertyChanging();
                    this._ExchangeCode = value;
                    this.SendPropertyChanged("ExchangeCode");
                    this.OnExchangeCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ExchangeDescription", DbType = "VarChar(1000)")]
        public string ExchangeDescription
        {
            get
            {
                return this._ExchangeDescription;
            }

            set
            {
                if ((this._ExchangeDescription != value))
                {
                    this.OnExchangeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._ExchangeDescription = value;
                    this.SendPropertyChanged("ExchangeDescription");
                    this.OnExchangeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Domicile", DbType = "VarChar(1000)")]
        public string Domicile
        {
            get
            {
                return this._Domicile;
            }

            set
            {
                if ((this._Domicile != value))
                {
                    this.OnDomicileChanging(value);
                    this.SendPropertyChanging();
                    this._Domicile = value;
                    this.SendPropertyChanged("Domicile");
                    this.OnDomicileChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IssuerName", DbType = "VarChar(1000)")]
        public string IssuerName
        {
            get
            {
                return this._IssuerName;
            }

            set
            {
                if ((this._IssuerName != value))
                {
                    this.OnIssuerNameChanging(value);
                    this.SendPropertyChanging();
                    this._IssuerName = value;
                    this.SendPropertyChanged("IssuerName");
                    this.OnIssuerNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_IssuerOrgID", DbType = "VarChar(1000)")]
        public string IssuerOrgID
        {
            get
            {
                return this._IssuerOrgID;
            }

            set
            {
                if ((this._IssuerOrgID != value))
                {
                    this.OnIssuerOrgIDChanging(value);
                    this.SendPropertyChanging();
                    this._IssuerOrgID = value;
                    this.SendPropertyChanged("IssuerOrgID");
                    this.OnIssuerOrgIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ETFType", DbType = "VarChar(1000)")]
        public string ETFType
        {
            get
            {
                return this._ETFType;
            }

            set
            {
                if ((this._ETFType != value))
                {
                    this.OnETFTypeChanging(value);
                    this.SendPropertyChanging();
                    this._ETFType = value;
                    this.SendPropertyChanged("ETFType");
                    this.OnETFTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ConvertibleFlag", DbType = "VarChar(1000)")]
        public string ConvertibleFlag
        {
            get
            {
                return this._ConvertibleFlag;
            }

            set
            {
                if ((this._ConvertibleFlag != value))
                {
                    this.OnConvertibleFlagChanging(value);
                    this.SendPropertyChanging();
                    this._ConvertibleFlag = value;
                    this.SendPropertyChanged("ConvertibleFlag");
                    this.OnConvertibleFlagChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FloatIndexType", DbType = "VarChar(1000)")]
        public string FloatIndexType
        {
            get
            {
                return this._FloatIndexType;
            }

            set
            {
                if ((this._FloatIndexType != value))
                {
                    this.OnFloatIndexTypeChanging(value);
                    this.SendPropertyChanging();
                    this._FloatIndexType = value;
                    this.SendPropertyChanged("FloatIndexType");
                    this.OnFloatIndexTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponResetFrequency", DbType = "VarChar(1000)")]
        public string CouponResetFrequency
        {
            get
            {
                return this._CouponResetFrequency;
            }

            set
            {
                if ((this._CouponResetFrequency != value))
                {
                    this.OnCouponResetFrequencyChanging(value);
                    this.SendPropertyChanging();
                    this._CouponResetFrequency = value;
                    this.SendPropertyChanged("CouponResetFrequency");
                    this.OnCouponResetFrequencyChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponResetFrequencyDescription", DbType = "VarChar(1000)")]
        public string CouponResetFrequencyDescription
        {
            get
            {
                return this._CouponResetFrequencyDescription;
            }

            set
            {
                if ((this._CouponResetFrequencyDescription != value))
                {
                    this.OnCouponResetFrequencyDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._CouponResetFrequencyDescription = value;
                    this.SendPropertyChanged("CouponResetFrequencyDescription");
                    this.OnCouponResetFrequencyDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponResetRuleCode", DbType = "VarChar(1000)")]
        public string CouponResetRuleCode
        {
            get
            {
                return this._CouponResetRuleCode;
            }

            set
            {
                if ((this._CouponResetRuleCode != value))
                {
                    this.OnCouponResetRuleCodeChanging(value);
                    this.SendPropertyChanging();
                    this._CouponResetRuleCode = value;
                    this.SendPropertyChanged("CouponResetRuleCode");
                    this.OnCouponResetRuleCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CouponResetRuleCodeDescription", DbType = "VarChar(1000)")]
        public string CouponResetRuleCodeDescription
        {
            get
            {
                return this._CouponResetRuleCodeDescription;
            }

            set
            {
                if ((this._CouponResetRuleCodeDescription != value))
                {
                    this.OnCouponResetRuleCodeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._CouponResetRuleCodeDescription = value;
                    this.SendPropertyChanged("CouponResetRuleCodeDescription");
                    this.OnCouponResetRuleCodeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PreviousCouponDate", DbType = "VarChar(1000)")]
        public string PreviousCouponDate
        {
            get
            {
                return this._PreviousCouponDate;
            }

            set
            {
                if ((this._PreviousCouponDate != value))
                {
                    this.OnPreviousCouponDateChanging(value);
                    this.SendPropertyChanging();
                    this._PreviousCouponDate = value;
                    this.SendPropertyChanged("PreviousCouponDate");
                    this.OnPreviousCouponDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SharesAmountType", DbType = "VarChar(1000)")]
        public string SharesAmountType
        {
            get
            {
                return this._SharesAmountType;
            }

            set
            {
                if ((this._SharesAmountType != value))
                {
                    this.OnSharesAmountTypeChanging(value);
                    this.SendPropertyChanging();
                    this._SharesAmountType = value;
                    this.SendPropertyChanged("SharesAmountType");
                    this.OnSharesAmountTypeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SharesAmount", DbType = "VarChar(1000)")]
        public string SharesAmount
        {
            get
            {
                return this._SharesAmount;
            }

            set
            {
                if ((this._SharesAmount != value))
                {
                    this.OnSharesAmountChanging(value);
                    this.SendPropertyChanging();
                    this._SharesAmount = value;
                    this.SendPropertyChanged("SharesAmount");
                    this.OnSharesAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RefinitivClassificationScheme", DbType = "VarChar(1000)")]
        public string RefinitivClassificationScheme
        {
            get
            {
                return this._RefinitivClassificationScheme;
            }

            set
            {
                if ((this._RefinitivClassificationScheme != value))
                {
                    this.OnRefinitivClassificationSchemeChanging(value);
                    this.SendPropertyChanging();
                    this._RefinitivClassificationScheme = value;
                    this.SendPropertyChanged("RefinitivClassificationScheme");
                    this.OnRefinitivClassificationSchemeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RefinitivClassificationSchemeDescription", DbType = "VarChar(1000)")]
        public string RefinitivClassificationSchemeDescription
        {
            get
            {
                return this._RefinitivClassificationSchemeDescription;
            }

            set
            {
                if ((this._RefinitivClassificationSchemeDescription != value))
                {
                    this.OnRefinitivClassificationSchemeDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._RefinitivClassificationSchemeDescription = value;
                    this.SendPropertyChanged("RefinitivClassificationSchemeDescription");
                    this.OnRefinitivClassificationSchemeDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GeographicalFocus", DbType = "VarChar(1000)")]
        public string GeographicalFocus
        {
            get
            {
                return this._GeographicalFocus;
            }

            set
            {
                if ((this._GeographicalFocus != value))
                {
                    this.OnGeographicalFocusChanging(value);
                    this.SendPropertyChanging();
                    this._GeographicalFocus = value;
                    this.SendPropertyChanged("GeographicalFocus");
                    this.OnGeographicalFocusChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LipperGlobalClassification", DbType = "VarChar(1000)")]
        public string LipperGlobalClassification
        {
            get
            {
                return this._LipperGlobalClassification;
            }

            set
            {
                if ((this._LipperGlobalClassification != value))
                {
                    this.OnLipperGlobalClassificationChanging(value);
                    this.SendPropertyChanging();
                    this._LipperGlobalClassification = value;
                    this.SendPropertyChanged("LipperGlobalClassification");
                    this.OnLipperGlobalClassificationChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_FundManagerBenchmark", DbType = "VarChar(1000)")]
        public string FundManagerBenchmark
        {
            get
            {
                return this._FundManagerBenchmark;
            }

            set
            {
                if ((this._FundManagerBenchmark != value))
                {
                    this.OnFundManagerBenchmarkChanging(value);
                    this.SendPropertyChanging();
                    this._FundManagerBenchmark = value;
                    this.SendPropertyChanged("FundManagerBenchmark");
                    this.OnFundManagerBenchmarkChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_UserDefinedIdentifier", DbType = "VarChar(1000)")]
        public string UserDefinedIdentifier
        {
            get
            {
                return this._UserDefinedIdentifier;
            }

            set
            {
                if ((this._UserDefinedIdentifier != value))
                {
                    this.OnUserDefinedIdentifierChanging(value);
                    this.SendPropertyChanging();
                    this._UserDefinedIdentifier = value;
                    this.SendPropertyChanged("UserDefinedIdentifier");
                    this.OnUserDefinedIdentifierChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Load_DateTime", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Load_DateTime
        {
            get
            {
                return this._Load_DateTime;
            }

            set
            {
                if ((this._Load_DateTime != value))
                {
                    this.OnLoad_DateTimeChanging(value);
                    this.SendPropertyChanging();
                    this._Load_DateTime = value;
                    this.SendPropertyChanged("Load_DateTime");
                    this.OnLoad_DateTimeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_RawCheckSum", DbType = "VarBinary(20)", UpdateCheck = UpdateCheck.Never)]
        public System.Data.Linq.Binary RawCheckSum
        {
            get
            {
                return this._RawCheckSum;
            }

            set
            {
                if ((this._RawCheckSum != value))
                {
                    this.OnRawCheckSumChanging(value);
                    this.SendPropertyChanging();
                    this._RawCheckSum = value;
                    this.SendPropertyChanged("RawCheckSum");
                    this.OnRawCheckSumChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class usp_Index_Code_GetIdentifiersResult
    {
        private string _DS_Index_Code;
        private string _Preferred_DataType;
        private System.Nullable<int> _SecID;
        public usp_Index_Code_GetIdentifiersResult()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DS_Index_Code", DbType = "VarChar(50)")]
        public string DS_Index_Code
        {
            get
            {
                return this._DS_Index_Code;
            }

            set
            {
                if ((this._DS_Index_Code != value))
                {
                    this._DS_Index_Code = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Preferred_DataType", DbType = "VarChar(50)")]
        public string Preferred_DataType
        {
            get
            {
                return this._Preferred_DataType;
            }

            set
            {
                if ((this._Preferred_DataType != value))
                {
                    this._Preferred_DataType = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SecID", DbType = "Int")]
        public System.Nullable<int> SecID
        {
            get
            {
                return this._SecID;
            }

            set
            {
                if ((this._SecID != value))
                {
                    this._SecID = value;
                }
            }
        }
    }
}
#pragma warning restore 1591
